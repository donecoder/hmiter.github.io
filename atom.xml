<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄敏</title>
  <icon>https://www.gravatar.com/avatar/ce5b59858047484c6bb4b99b631fb3e9</icon>
  <subtitle>黄敏的博客!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mindasoft.com/"/>
  <updated>2018-10-24T06:29:38.002Z</updated>
  <id>http://mindasoft.com/</id>
  
  <author>
    <name>Huang min</name>
    <email>hmiter@sina.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Integer源码分析</title>
    <link href="http://mindasoft.com/2018/10/24/javase/Integer%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://mindasoft.com/2018/10/24/javase/Integer源码分析/</id>
    <published>2018-10-24T14:29:37.000Z</published>
    <updated>2018-10-24T06:29:38.002Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="javase源码分析" scheme="http://mindasoft.com/categories/javase%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux查看物理CPU个数、核数、逻辑CPU个数.md</title>
    <link href="http://mindasoft.com/2018/02/07/Linux/Linux%E6%9F%A5%E7%9C%8B%E7%89%A9%E7%90%86CPU%E4%B8%AA%E6%95%B0%E3%80%81%E6%A0%B8%E6%95%B0%E3%80%81%E9%80%BB%E8%BE%91CPU%E4%B8%AA%E6%95%B0/"/>
    <id>http://mindasoft.com/2018/02/07/Linux/Linux查看物理CPU个数、核数、逻辑CPU个数/</id>
    <published>2018-02-07T09:28:52.000Z</published>
    <updated>2018-02-07T09:39:15.677Z</updated>
    
    <content type="html"><![CDATA[<p>CPU总核数 = 物理CPU个数 <em> 每颗物理CPU的核数<br>总逻辑CPU数 = 物理CPU个数 </em> 每颗物理CPU的核数 * 超线程数</p><p>查看CPU信息（型号）<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@AAA ~]# cat /<span class="keyword">proc</span>/cpuinfo |<span class="title"> grep</span> name |<span class="title"> cut</span> -f2 -d: |<span class="title"> uniq</span> -c</span><br><span class="line">     24<span class="title">         Intel(R)</span> Xeon(R)<span class="title"> CPU</span> E5-2630 0 @ 2.30GHz</span><br><span class="line"></span><br><span class="line"># 查看物理CPU个数</span><br><span class="line">[root@AAA ~]#<span class="title"> cat</span> /<span class="keyword">proc</span>/cpuinfo|<span class="title"> grep</span> "physical<span class="title"> id"|</span> sort|<span class="title"> uniq|</span> wc -l</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line"># 查看每个物理CPU中core的个数(即核数)</span><br><span class="line">[root@AAA ~]#<span class="title"> cat</span> /<span class="keyword">proc</span>/cpuinfo|<span class="title"> grep</span> "cpu<span class="title"> cores"|</span> uniq</span><br><span class="line">cpu<span class="title"> cores</span>    : 6</span><br><span class="line"></span><br><span class="line"># 查看逻辑CPU的个数</span><br><span class="line">[root@AAA ~]#<span class="title"> cat</span> /<span class="keyword">proc</span>/cpuinfo|<span class="title"> grep</span> "processor"|<span class="title"> wc</span> -l</span><br><span class="line">24</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CPU总核数 = 物理CPU个数 &lt;em&gt; 每颗物理CPU的核数&lt;br&gt;总逻辑CPU数 = 物理CPU个数 &lt;/em&gt; 每颗物理CPU的核数 * 超线程数&lt;/p&gt;
&lt;p&gt;查看CPU信息（型号）&lt;br&gt;&lt;figure class=&quot;highlight tcl&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Server" scheme="http://mindasoft.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>SSL-https配置.md</title>
    <link href="http://mindasoft.com/2018/01/08/server/SSL-https%E9%85%8D%E7%BD%AE/"/>
    <id>http://mindasoft.com/2018/01/08/server/SSL-https配置/</id>
    <published>2018-01-08T11:48:52.000Z</published>
    <updated>2018-02-07T09:44:17.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主流证书格式介绍"><a href="#主流证书格式介绍" class="headerlink" title="主流证书格式介绍"></a>主流证书格式介绍</h1><p>一般来说，主流的Web服务软件，通常都基于两种基础密码库：OpenSSL和Java。</p><p>Tomcat、Weblogic、JBoss等，使用Java提供的密码库。通过Java的Keytool工具，生成Java Keystore（JKS）格式的证书文件。</p><p>Apache、Nginx等，使用OpenSSL提供的密码库，生成PEM、KEY、CRT等格式的证书文件。</p><p>BM的产品，如Websphere、IBM Http Server（IHS）等，使用IBM产品自带的iKeyman工具，生成KDB格式的证书文件。</p><p>微软Windows Server中的Internet Information Services（IIS），使用Windows自带的证书库生成PFX格式的证书文件。</p><p>如果您在工作中遇到带有后缀扩展名的证书文件，可以简单用如下方法区分：</p><p><em>.DER </em>.CER : 这样的证书文件是二进制格式，只含有证书信息，不包含私钥。</p><p><em>.CRT : 这样的文件可以是二进制格式，也可以是文本格式，一般均为文本格式，功能与</em>.DER/*.CER相同。</p><p><em>.PEM : 一般是文本格式，可以放证书或私钥，或者两者都包含。 </em>.PEM如果只包含私钥，那一般用 *.KEY代替。</p><p><em>.PFX </em>.P12 是二进制格式，同时含证书和私钥，一般有密码保护。</p><p>怎么判断是文本格式还是二进制？</p><p>用记事本打开，如果是规则的数字字母，如<br>—–BEGIN CERTIFICATE—–<br>MIIE5zCCA8+gAwIBAgIQN+whYc2BgzAogau0dc3PtzANBgkqh……<br>—–END CERTIFICATE—–<br>就是文本的，上面的BEGIN CERTIFICATE，说明这是一个证书<br>如果是—–BEGIN RSA PRIVATE KEY—–，说明这是一个私钥</p><p>这些证书格式之间是可以互相转换的<br><img src="/img/zhengshu.jpg" alt="证书转换"><br>以下提供了一些证书之间的转换方法：</p><ol><li>将JKS转换成PFX</li></ol><p>可以使用Keytool工具，将JKS格式转换为PFX格式。</p><p>keytool -importkeystore -srckeystore D:\server.jks -destkeystore D:\server.pfx -srcstoretype JKS -deststoretype PKCS12</p><ol><li>将PFX转换为JKS</li></ol><p>可以使用Keytool工具，将PFX格式转换为JKS格式。</p><p>keytool -importkeystore -srckeystore D:\server.pfx -destkeystore D:\server.jks -srcstoretype PKCS12 -deststoretype JKS</p><ol><li>将PEM/KEY/CRT转换为PFX</li></ol><p>使用OpenSSL工具，可以将密钥文件KEY和公钥文件CRT转化为PFX文件。</p><p>将密钥文件KEY和公钥文件CRT放到OpenSSL目录下，打开OpenSSL执行以下命令：</p><p>openssl pkcs12 -export -out server.pfx -inkey server.key -in server.crt</p><ol><li>将PFX转换为PEM/KEY/CRT</li></ol><p>使用OpenSSL工具，可以将PFX文件转化为密钥文件KEY和公钥文件CRT。</p><p>将PFX文件放到OpenSSL目录下，打开OpenSSL执行以下命令：</p><p>openssl pkcs12 -in server.pfx -nodes -out server.pem</p><p>openssl rsa -in server.pem -out server.key</p><p>openssl x509 -in server.pem -out server.crt</p><p><strong> 请注意 </strong> 此步骤是专用于使用keytool生成私钥和CSR申请证书，并且获取到pem格式证书公钥的情况下做分离私钥使用的，所以在实际部署证书时请使用此步骤分离出来的私钥和申请下来的公钥证书做匹配使用。</p><p>云盾证书服务统一使用 PEM 格式的数字证书文件。</p><h1 id="pem证书转为jks证书"><a href="#pem证书转为jks证书" class="headerlink" title="pem证书转为jks证书"></a>pem证书转为jks证书</h1><p>第一步：pem(需要私钥) 转为 .pfx<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -export -out server<span class="selector-class">.pfx</span> -inkey private<span class="selector-class">.key</span> -<span class="keyword">in</span> server.pem</span><br></pre></td></tr></table></figure></p><p>第二步：.pfx 转为 .jks<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -importkeystore -srckeystore server<span class="selector-class">.pfx</span> -destkeystore server<span class="selector-class">.jks</span> -srcstoretype PKCS12 -deststoretype JKS</span><br></pre></td></tr></table></figure></p><h1 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span></span><br><span class="line">                  <span class="attribute">port</span>=<span class="string">"443"</span> <span class="attribute">SSLEnabled</span>=<span class="string">"true"</span></span><br><span class="line">                   <span class="attribute">maxThreads</span>=<span class="string">"150"</span> <span class="attribute">scheme</span>=<span class="string">"https"</span> <span class="attribute">secure</span>=<span class="string">"true"</span></span><br><span class="line">               <span class="attribute">keystoreFile</span>=<span class="string">"/home/websoft/key/server.jks"</span> <span class="attribute">keystorePass</span>=<span class="string">"123456"</span></span><br><span class="line">               <span class="attribute">clientAuth</span>=<span class="string">"false"</span> <span class="attribute">sslProtocol</span>=<span class="string">"TLS"</span></span><br><span class="line"> <span class="attribute">ciphers</span>=<span class="string">"TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,</span></span><br><span class="line"><span class="string">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256"</span>  /&gt;</span><br></pre></td></tr></table></figure><h1 id="ngnix配置"><a href="#ngnix配置" class="headerlink" title="ngnix配置"></a>ngnix配置</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span>    <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span>    <span class="number">443</span> ssl;</span><br><span class="line">  <span class="comment"># ssl on; #在同一个server&#123;&#125;里配置同时开启http和https时，不需要开启此项！</span></span><br><span class="line">  <span class="attribute">server_name</span> dev.cmop.mgtv.com;</span><br><span class="line">  <span class="attribute">root</span>     /home/websoft/nginx/html;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">ssl_certificate</span> <span class="string">"/home/websoft/key/dev/full_chain.pem"</span>;</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> <span class="string">"/home/websoft/key/dev/private.key"</span>;</span><br><span class="line">  <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span>  SSLv2 SSLv3 TLSv1;<span class="comment">#指定密码为openssl支持的格式</span></span><br><span class="line">  <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;<span class="comment">#密码加密方式</span></span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span>   <span class="literal">on</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">    <span class="attribute">location</span> = /40x.html &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span>    <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span>    <span class="number">443</span> ssl;</span><br><span class="line">  <span class="comment"># ssl on;  #在同一个server&#123;&#125;里配置同时开启http和https时，不需要开启此项！</span></span><br><span class="line">  <span class="attribute">server_name</span> book.cmop.mgtv.com;</span><br><span class="line">  <span class="attribute">root</span>     /home/websoft/nginx/html;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">ssl_certificate</span> <span class="string">"/home/websoft/key/book/full_chain.pem"</span>;</span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> <span class="string">"/home/websoft/key/book/private.key"</span>;</span><br><span class="line">  <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line">  <span class="attribute">ssl_protocols</span>  SSLv2 SSLv3 TLSv1;<span class="comment">#指定密码为openssl支持的格式</span></span><br><span class="line">  <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;<span class="comment">#密码加密方式</span></span><br><span class="line">  <span class="attribute">ssl_prefer_server_ciphers</span>   <span class="literal">on</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">    <span class="attribute">location</span> = /40x.html &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;主流证书格式介绍&quot;&gt;&lt;a href=&quot;#主流证书格式介绍&quot; class=&quot;headerlink&quot; title=&quot;主流证书格式介绍&quot;&gt;&lt;/a&gt;主流证书格式介绍&lt;/h1&gt;&lt;p&gt;一般来说，主流的Web服务软件，通常都基于两种基础密码库：OpenSSL和Java。&lt;/p&gt;
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Server" scheme="http://mindasoft.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>Linux时间和时区</title>
    <link href="http://mindasoft.com/2018/01/03/Linux/Linux%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%B6%E5%8C%BA/"/>
    <id>http://mindasoft.com/2018/01/03/Linux/Linux时间和时区/</id>
    <published>2018-01-03T07:46:00.000Z</published>
    <updated>2018-01-03T07:55:33.549Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的 Linux 系统时区配置不正确，必需要手动调整到正确的当地时区。<br>NTP 对时间的同步处理只计算当地时间与 UTC 时间的偏移量，因此配置一个 NTP 对时间进行同步并不能解决时区不正确的问题。<br>所以大家在用了国外云计算服务商如 Microsoft Azure 或其它 VPS、虚拟机时，需要注意是否与中国大陆的时区一致。</p><h1 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h1><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 查询时间</span></span><br><span class="line">date</span><br><span class="line"><span class="meta"># 修改时间</span></span><br><span class="line">date -s <span class="string">"2018-01-03 15:36:25"</span></span><br><span class="line"><span class="meta"># 查看时区时间</span></span><br><span class="line">ls -l /etc/localtime</span><br></pre></td></tr></table></figure><h1 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h1><p>/etc/localtime是用来描述本机时间，而 /etc/timezone是用来描述本机所属的时区.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改时区</span></span><br><span class="line">tzselect</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看时区</span></span><br><span class="line">timedatectl</span><br></pre></td></tr></table></figure></p><p>Linux 用户一个多用户系统，每个用户都可以配置自己所需的时区，你可以为自己新增一个 TZ 环境变量：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">TZ</span>=<span class="string">'Asia/Shanghai'</span></span><br></pre></td></tr></table></figure></p><p>执行完成之后需要重新登录系统或刷新 ~/.bashrc 生效。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>更改Linux系统时区<br>要更改 Linux 系统整个系统范围的时区可以使用如下命令：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -f <span class="regexp">/etc/</span>localtime</span><br><span class="line">sudo ln -s <span class="regexp">/usr/</span>share<span class="regexp">/zoneinfo/</span>Asia<span class="regexp">/Shanghai /</span>etc<span class="regexp">/localtime</span></span><br></pre></td></tr></table></figure></p><p>注意：/usr/share/zoneinfo/Asia/Shanghai 中的具体时区请用自己获取到的 TZ 值进行替换。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果你的 Linux 系统时区配置不正确，必需要手动调整到正确的当地时区。&lt;br&gt;NTP 对时间的同步处理只计算当地时间与 UTC 时间的偏移量，因此配置一个 NTP 对时间进行同步并不能解决时区不正确的问题。&lt;br&gt;所以大家在用了国外云计算服务商如 Microsoft A
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Linux" scheme="http://mindasoft.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.3防火墙配置</title>
    <link href="http://mindasoft.com/2018/01/02/Linux/Centos7.3%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE/"/>
    <id>http://mindasoft.com/2018/01/02/Linux/Centos7.3防火墙配置/</id>
    <published>2018-01-02T02:02:00.000Z</published>
    <updated>2018-01-02T10:07:29.458Z</updated>
    
    <content type="html"><![CDATA[<h1 id="firewall防火墙"><a href="#firewall防火墙" class="headerlink" title="firewall防火墙"></a>firewall防火墙</h1><p>1、查看firewall服务状态<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">查看状态： systemctl status firewalld </span><br><span class="line">启动： systemctl <span class="keyword">start</span> firewalld</span><br><span class="line">停止： systemctl <span class="keyword">stop</span> firewalld</span><br><span class="line">禁用： systemctl <span class="keyword">enable</span> firewalld</span><br><span class="line">启用： systemctl <span class="keyword">disable</span> firewalld</span><br><span class="line"></span><br><span class="line">启动一个服务：systemctl <span class="keyword">start</span> firewalld.service</span><br><span class="line">关闭一个服务：systemctl <span class="keyword">stop</span> firewalld.service</span><br><span class="line">重启一个服务：systemctl restart firewalld.service</span><br><span class="line">显示一个服务的状态：systemctl <span class="keyword">status</span> firewalld.service</span><br><span class="line">在开机时启用一个服务：systemctl <span class="keyword">enable</span> firewalld.service</span><br><span class="line">在开机时禁用一个服务：systemctl <span class="keyword">disable</span> firewalld.service</span><br><span class="line">查看服务是否开机启动：systemctl <span class="keyword">is</span>-enabled firewalld.service</span><br><span class="line">查看已启动的服务列表：systemctl <span class="keyword">list</span>-unit-files|grep enabled</span><br><span class="line">查看启动失败的服务列表：systemctl <span class="comment">--failed</span></span><br></pre></td></tr></table></figure></p><p>2、查看firewall的状态<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --state</span></span><br></pre></td></tr></table></figure></p><p>3、开启、重启、关闭、firewalld.service服务<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">service firewalld restart</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">service firewalld stop</span><br></pre></td></tr></table></figure></p><p>4、查看防火墙规则<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --list-all  -zone=public</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">查看版本： firewall-cmd --version</span></span><br><span class="line"><span class="bash">查看帮助： firewall-cmd --<span class="built_in">help</span></span></span><br><span class="line"><span class="bash">显示状态： firewall-cmd --state</span></span><br><span class="line"><span class="bash">查看所有打开的端口： firewall-cmd --zone=public --list-ports</span></span><br><span class="line"><span class="bash">更新防火墙规则： firewall-cmd --reload</span></span><br><span class="line"><span class="bash">查看区域信息:  firewall-cmd --get-active-zones</span></span><br><span class="line"><span class="bash">查看指定接口所属区域： firewall-cmd --get-zone-of-interface=eth0</span></span><br><span class="line"><span class="bash">拒绝所有包：firewall-cmd --panic-on</span></span><br><span class="line"><span class="bash">取消拒绝状态： firewall-cmd --panic-off</span></span><br><span class="line"><span class="bash">查看是否拒绝： firewall-cmd --query-panic</span></span><br></pre></td></tr></table></figure></p><p>5、查询、开放、关闭端口</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询端口是否开放</span></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --query-port=8080/tcp </span></span><br><span class="line"><span class="bash"><span class="comment"># 开放80端口</span></span></span><br><span class="line"><span class="bash">firewall-cmd --permanent --add-port=80/tcp -zone=public</span></span><br><span class="line"><span class="bash"><span class="comment"># 移除端口</span></span></span><br><span class="line"><span class="bash">firewall-cmd --permanent --remove-port=8080/tcp -zone=public</span></span><br><span class="line"><span class="bash"><span class="comment">#重启防火墙(修改配置后要重启防火墙)</span></span></span><br><span class="line"><span class="bash">firewall-cmd --reload</span></span><br></pre></td></tr></table></figure><p>参数解释<br>1、firwall-cmd：是Linux提供的操作firewall的一个工具；<br>2、–permanent：表示设置为持久；<br>3、–add-port：标识添加的端口；</p><h1 id="iptables防火墙"><a href="#iptables防火墙" class="headerlink" title="iptables防火墙"></a>iptables防火墙</h1><p>1、安装<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install iptables-services</span><br><span class="line">sudo<span class="keyword"> system</span>ctl enable iptables &amp;&amp; sudo<span class="keyword"> system</span>ctl enable ip6tables</span><br><span class="line">sudo<span class="keyword"> system</span>ctl start iptables &amp;&amp; sudo<span class="keyword"> system</span>ctl start ip6tables</span><br></pre></td></tr></table></figure></p><p>2、启用、禁用<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"> #</span><span class="bash">最后重启防火墙使配置生效</span></span><br><span class="line">systemctl restart iptables.service</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置防火墙开机启动</span></span><br><span class="line">systemctl enable iptables.service</span><br></pre></td></tr></table></figure></p><p>3、编辑配置文件<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>sysconfig<span class="regexp">/iptables</span></span><br></pre></td></tr></table></figure></p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># sampleconfiguration for iptables service</span><br><span class="line"># you can edit thismanually or use system-config-firewall</span><br><span class="line"># please do not askus to add additional ports/services to this default configuration</span><br><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:FORWARD ACCEPT[0:0]</span><br><span class="line">:OUTPUT ACCEPT[0:0]</span><br><span class="line">-<span class="ruby">A INPUT -m state--state RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="ruby">-A INPUT -p icmp -jACCEPT</span></span><br><span class="line"><span class="ruby">-A INPUT -i lo -jACCEPT</span></span><br><span class="line"><span class="ruby">-A INPUT -p tcp -mstate --state NEW -m tcp --dport <span class="number">22</span> -j ACCEPT</span></span><br><span class="line"><span class="ruby">-A INPUT -p tcp -m state --state NEW -m tcp --dport <span class="number">80</span> -jACCEPT</span></span><br><span class="line"><span class="ruby">-A INPUT -p tcp -m state --state NEW -m tcp --dport <span class="number">8080</span>-j ACCEPT</span></span><br><span class="line"><span class="ruby">-A INPUT -j REJECT--reject-with icmp-host-prohibited</span></span><br><span class="line"><span class="ruby">-A FORWARD -jREJECT --reject-with icmp-host-prohibited</span></span><br><span class="line"><span class="ruby">COMMIT</span></span><br></pre></td></tr></table></figure><p>4、开启、停止<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看防火墙状态： </span></span><br><span class="line">service iptables status</span><br><span class="line"><span class="comment"># 开启防火墙：</span></span><br><span class="line">service iptables start</span><br><span class="line"><span class="comment"># 关闭防火墙：</span></span><br><span class="line">service iptables stop</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;firewall防火墙&quot;&gt;&lt;a href=&quot;#firewall防火墙&quot; class=&quot;headerlink&quot; title=&quot;firewall防火墙&quot;&gt;&lt;/a&gt;firewall防火墙&lt;/h1&gt;&lt;p&gt;1、查看firewall服务状态&lt;br&gt;&lt;figure class=
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Linux" scheme="http://mindasoft.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Logger4j详解</title>
    <link href="http://mindasoft.com/2017/12/27/Java/Logger4j%E8%AF%A6%E8%A7%A3/"/>
    <id>http://mindasoft.com/2017/12/27/Java/Logger4j详解/</id>
    <published>2017-12-27T05:51:44.000Z</published>
    <updated>2017-12-27T05:53:39.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h1><p>Log4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件、甚至是套接口服务 器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。</p><p>Log4j由三个重要的组件构成：日志信息的优先级（Loggers），日志信息的输出目的地（Appenders），日志信息的输出格式（Layouts）。日志信息的优先级从高到低有ERROR、WARN、 INFO、DEBUG，分别用来指定这条日志信息的重要程度；日志信息的输出目的地指定了日志将打印到控制台还是文件中；而输出格式则控制了日志信息的显示内容。</p><h1 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h1><p>其实您也可以完全不使用配置文件，而是在代码中配置Log4j环境。但是，使用配置文件将使您的应用程序更加灵活。<br>Log4j支持两种配置文件格式，一种是XML格式的文件，一种是properties格式的文件。下面我们介绍使用properties格式做为配置文件的方法：<br>示例：<br>log4j.rootLogger=INFO, A1<br>log4j.appender.A1=org.apache.log4j.ConsoleAppender<br>log4j.appender.A1.layout=org.apache.log4j.PatternLayout<br>log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n</p><h2 id="1-配置根Logger，其语法为："><a href="#1-配置根Logger，其语法为：" class="headerlink" title="1. 配置根Logger，其语法为："></a>1. 配置根Logger，其语法为：</h2><p>log4j.rootLogger = [ level ] , appenderName, appenderName, …<br>其中，level 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。比如在这里定义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来。</p><p>appenderName就是指定日志信息输出到哪个地方。您可以同时指定多个输出目的地。</p><h2 id="2-配置日志信息输出目的地Appender，其语法为："><a href="#2-配置日志信息输出目的地Appender，其语法为：" class="headerlink" title="2. 配置日志信息输出目的地Appender，其语法为："></a>2. 配置日志信息输出目的地Appender，其语法为：</h2><p>log4j.appender.appenderName = package+appender_class_name<br>log4j.appender.appenderName.option1 = value1<br>…<br>log4j.appender.appenderName.option = valueN<br>其中，Log4j提供的appender有以下几种：<br>org.apache.log4j.ConsoleAppender（控制台），<br>org.apache.log4j.FileAppender（文件），<br>org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），<br>org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），<br>org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方)</p><p>org.apache.log4j.jdbc.JDBCAppender(将日志写入数据库)</p><p>(1).ConsoleAppender选项<br>Threshold=WARN:指定日志消息的输出最低层次。<br>ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。<br>Target=System.err：默认情况下是：System.out,指定输出控制台<br>(2).FileAppender 选项<br>Threshold=WARN:指定日志消息的输出最低层次。<br>ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。<br>File=mylog.txt:指定消息输出到mylog.txt文件。<br>Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。<br>(3).DailyRollingFileAppender 选项<br>Threshold=WARN:指定日志消息的输出最低层次。<br>ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。<br>File=mylog.txt:指定消息输出到mylog.txt文件。<br>Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。<br>DatePattern=’.’yyyy-ww:每周滚动一次文件，即每周产生一个新的文件。当然也可以指定按月、周、天、时和分。即对应的格式如下：<br>1)’.’yyyy-MM: 每月<br>2)’.’yyyy-ww: 每周<br>3)’.’yyyy-MM-dd: 每天<br>4)’.’yyyy-MM-dd-a: 每天两次<br>5)’.’yyyy-MM-dd-HH: 每小时<br>6)’.’yyyy-MM-dd-HH-mm: 每分钟<br>(4).RollingFileAppender 选项<br>Threshold=WARN:指定日志消息的输出最低层次。<br>ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。<br>File=mylog.txt:指定消息输出到mylog.txt文件。<br>Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。<br>MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。<br>MaxBackupIndex=2:指定可以产生的滚动文件的最大数。</p><p>(5). JDBCApperder选项</p><p>URL=jdbc:mysql://localhost:3306/test：指定日志写入的数据库链接<br>driver=com.mysql.jdbc.Driver：指定数据库驱动<br>user=root：指定数据库的用户名<br>password=123：指定数据库的登录密码<br>sql=insert into tb_log (message) values(‘=[%-5p] %d(%r) –&gt; [%t] %l: %m %x %n’)：指定写入数据库的执行语句</p><h2 id="3-配置日志信息的布局，其语法为："><a href="#3-配置日志信息的布局，其语法为：" class="headerlink" title="3. 配置日志信息的布局，其语法为："></a>3. 配置日志信息的布局，其语法为：</h2><p>log4j.appender.appenderName.layout = package+layout_class_name<br>log4j.appender.appenderName.layout.option1 = value1<br>…<br>log4j.appender.appenderName.layout.option = valueN<br>其中，Log4j提供的layout有以下几种：<br>org.apache.log4j.HTMLLayout（以HTML表格形式布局），<br>org.apache.log4j.PatternLayout（可以灵活地指定布局模式），<br>org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），<br>org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）</p><h2 id="4、输出格式设置"><a href="#4、输出格式设置" class="headerlink" title="4、输出格式设置"></a>4、输出格式设置</h2><p>在配置文件中可以通过log4j.appender.A1.layout.ConversionPattern设置日志输出格式。<br>参数：<br>%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,<br>%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921</p><p>%r: 输出自应用启动到输出该log信息耗费的毫秒数<br>%c: 输出日志信息所属的类目，通常就是所在类的全名<br>%t: 输出产生该日志事件的线程名<br>%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)</p><p>%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。<br>%%: 输出一个”%”字符<br>%F: 输出日志消息产生时所在的文件名称<br>%L: 输出代码中的行号<br>%m: 输出代码中指定的消息,产生的日志具体信息<br>%n: 输出一个回车换行符，Windows平台为”\r\n”，Unix平台为”\n”输出日志信息换行<br>可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：<br>1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。<br>2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，”-”号指定左对齐。<br>3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。<br>4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边交远销出的字符截掉。</p><h1 id="三、如何在不同的模块中输出不同的日志"><a href="#三、如何在不同的模块中输出不同的日志" class="headerlink" title="三、如何在不同的模块中输出不同的日志"></a>三、如何在不同的模块中输出不同的日志</h1><p>用户基础信息模块路径为：com.test.user<br>它下面有个类：com.test.user.service.impl.UserInfo<br>private Log log = LogFactory.getLog(UserInfo.class);</p><h2 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h2><p>在log4j.properties中加入:<br>log4j.logger.com.test.user=info,userLog,stdout<br>log4j.appender.userLog=org.apache.log4j.FileAppender<br>log4j.appender.userLog.File=../logs/userinfo.log<br>log4j.appender.userLog.Append=true<br>log4j.appender.userLog.Threshold=info<br>log4j.appender.userLog.layout=org.apache.log4j.PatternLayout<br>log4j.appender.userLog.layout.ConversionPattern==%d %p [%c] - %m%n</p><p>注：也就是让com.test.user模块下所有的logger使用log4j.appender.userLog所做的配置。</p><h2 id="方法2：自定义“别名”"><a href="#方法2：自定义“别名”" class="headerlink" title="方法2：自定义“别名”"></a>方法2：自定义“别名”</h2><p>private Log log = LogFactory.getLog(“userInfoLog”);<br>然后在log4j.properties中加入:<br>log4j.logger.userInfoLog=info,userLog,stdout<br>log4j.appender.userLog=org.apache.log4j.FileAppender<br>log4j.appender.userLog.File=../logs/userinfo.log<br>log4j.appender.userLog.Append=true<br>log4j.appender.userLog.Threshold=info<br>log4j.appender.userLog.layout=org.apache.log4j.PatternLayout<br>log4j.appender.userLog.layout.ConversionPattern==%d %p [%c] - %m%n</p><p>注：也就是在用logger时给它一个自定义的名字(如这里的”userInfoLog”)，然后在log4j.properties中做出相应配置即可。，在这种模式下，即使在同一个类中也能定义多个不同输出的log.</p><p>在类中调用代码如下：<br>private Log loggerError = LogFactory.getLog(“userErrorLog”);<br>private Log loggerInfo = LogFactory.getLog(“userInfoLog”);</p><p>自定义的日志默认是同时输出到log4j.rootLogger所配置的日志中的，如何能只让它们输出到自己指定的日志中呢？<br>log4j.additivity.userInfoLog = false<br>它用来设置是否同时输出到log4j.rootLogger所配置的日志中，设为false就不会输出到其它地方啦！注意这里的”userInfoLog”是你在程序中给logger起的那个自定义的名字！<br>如果你说，我只是不想同时输出这个日志到log4j.rootLogger所配置的logfile中，stdout里我还想同时输出呢！如：<br>log4j.logger.userInfoLog=DEBUG, userLog, stdout</p><h1 id="三、加载log4j-properties文件"><a href="#三、加载log4j-properties文件" class="headerlink" title="三、加载log4j.properties文件"></a>三、加载log4j.properties文件</h1><h2 id="1、spring方式加载，配置与web-xml中："><a href="#1、spring方式加载，配置与web-xml中：" class="headerlink" title="1、spring方式加载，配置与web.xml中："></a>1、spring方式加载，配置与web.xml中：</h2><p>Spring加载log4j.properties，它提供了一个Log4jConfigListener，本身就能通过web.xml配置从指定位置加载log4j配置文件和log4j的输出路径，要注意的是</p><p>Log4jConfigListener必须要在Spring的Listener之前。</p><p>web.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设置由Spring载入的Log4j配置文件位置 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>WEB-INF/classes/log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Spring刷新Log4j配置文件变动的间隔,单位为毫秒 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jRefreshInterval<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="2、可以通过资源类对资源文件进行加载，与使用为一体"><a href="#2、可以通过资源类对资源文件进行加载，与使用为一体" class="headerlink" title="2、可以通过资源类对资源文件进行加载，与使用为一体"></a>2、可以通过资源类对资源文件进行加载，与使用为一体</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger4JTest</span> &#123;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        PropertyConfigurator.configure(<span class="string">" D:/log/log4j.properties "</span>);  </span><br><span class="line">        Logger logger = Logger.getLogger(Logger4JTest.class);  </span><br><span class="line">        logger.debug(<span class="string">" debug "</span>);  </span><br><span class="line">        logger.error(<span class="string">" error "</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、在程序中的使用"><a href="#四、在程序中的使用" class="headerlink" title="四、在程序中的使用"></a>四、在程序中的使用</h1><p>在程序中使用Log4j之前，首先要将commons-logging.jar和logging-log4j-1.2.9.jar导入到classpath中，并将log4j.properties放于src根目录中。接下来就可以使用了。</p><h2 id="1-得到记录器"><a href="#1-得到记录器" class="headerlink" title="1.得到记录器"></a>1.得到记录器</h2><p>使用Log4j，第一步就是获取日志记录器，这个记录器将负责控制日志信息。其语法为：<br>public static Logger getLogger( String name)，<br>通过指定的名字获得记录器，如果必要的话，则为这个名字创建一个新的记录器。Name一般取本类的名字，比如：<br>static Logger logger = Logger.getLogger ( ServerWithLog4j.class.getName () ) ; </p><h2 id="2-插入记录信息（格式化日志信息）"><a href="#2-插入记录信息（格式化日志信息）" class="headerlink" title="2.插入记录信息（格式化日志信息）"></a>2.插入记录信息（格式化日志信息）</h2><p>当上两个必要步骤执行完毕，您就可以轻松地使用不同优先级别的日志记录语句插入到您想记录日志的任何地方，其语法如下：<br>logger.debug ( Object message ) ;<br>logger.info ( Object message ) ;<br>logger.warn ( Object message ) ;<br>logger.error ( Object message ) ;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h1&gt;&lt;p&gt;Log4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件、甚至
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Java" scheme="http://mindasoft.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>NIO框架的一点想法</title>
    <link href="http://mindasoft.com/2017/12/27/Java/NIO%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/"/>
    <id>http://mindasoft.com/2017/12/27/Java/NIO框架的一点想法/</id>
    <published>2017-12-27T01:13:44.000Z</published>
    <updated>2017-12-27T01:20:36.272Z</updated>
    
    <content type="html"><![CDATA[<p>不管是什么NIO框架。本身其实都是对Java底层的一种在封装。封装一套更简便，更易于扩展的一套东西以方便开发者使用。所以性能上也许会有所差异，但是绝对没有java和C++之间这么多。(代码写的太烂的除外，不过想要使用java写出很烂的代码也比较困难。)这些框架在性能方面差别不会超过1%。</p><p>Mina和Netty开始。因为这两个NIO框架的创作者是同一个人Trustin Lee （韩国人）。GitHub主页地址 ：<a href="https://github.com/trustin。尽管创作者现在已经不专注与开发了。但是框架的后续开发和继承，可以说都是符合最开始的设定的。两个框架的架构设计思路基本一致。" target="_blank" rel="noopener">https://github.com/trustin。尽管创作者现在已经不专注与开发了。但是框架的后续开发和继承，可以说都是符合最开始的设定的。两个框架的架构设计思路基本一致。</a></p><p>Netty从某种程度上讲是Mina的延伸和扩展。解决了一些Mina上的设计缺陷，也优化了一下Mina上面的设计理念。</p><p>另一方面Netty相比较Mina更容易学习。API更简单。详细的范例源码和API文档。更活跃的论坛和社区。更高的代码更新维护速度。</p><p>我想不出什么理由来不选择Netty。</p><p>xSocket：是一个轻量级的基于nio的服务器框架用于开发高性能、可扩展、多线程的服务器。该框架封装了线程处理、异步读/写等方面。（只是对Java的NIO做了最简单的封装，以便于开发使用。）</p><p>Grizzly ： 是一种应用程序框架，专门解决编写成千上万用户访问服务器时候产生的各种问题。使用JAVA NIO作为基础，并隐藏其编程的复杂性。容易使用的高性能的API。带来非阻塞socketd到协议处理层。利用高性能的缓冲和缓冲管理使用高性能的线程池。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不管是什么NIO框架。本身其实都是对Java底层的一种在封装。封装一套更简便，更易于扩展的一套东西以方便开发者使用。所以性能上也许会有所差异，但是绝对没有java和C++之间这么多。(代码写的太烂的除外，不过想要使用java写出很烂的代码也比较困难。)这些框架在性能方面差别
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Java" scheme="http://mindasoft.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置文件详解</title>
    <link href="http://mindasoft.com/2017/12/15/server/Nginx%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>http://mindasoft.com/2017/12/15/server/Nginx配置文件详解/</id>
    <published>2017-12-15T07:48:52.000Z</published>
    <updated>2018-01-03T07:45:04.678Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######Nginx配置文件nginx.conf中文详解#####</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义Nginx运行的用户和用户组</span></span><br><span class="line"><span class="attribute">user</span> www www;</span><br><span class="line"></span><br><span class="line"><span class="comment">#nginx进程数，建议设置为等于CPU总核心数。</span></span><br><span class="line"><span class="attribute">worker_processes</span> <span class="number">8</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line"><span class="attribute">error_log</span> /usr/local/nginx/logs/error.log <span class="literal">info</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#进程pid文件</span></span><br><span class="line"><span class="attribute">pid</span> /usr/local/nginx/logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定进程可以打开的最大描述符：数目</span></span><br><span class="line"><span class="comment">#工作模式与连接数上限</span></span><br><span class="line"><span class="comment">#这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。</span></span><br><span class="line"><span class="comment">#现在在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就相应应该填写65535。</span></span><br><span class="line"><span class="comment">#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了，这时会返回502错误。</span></span><br><span class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">65535</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型</span></span><br><span class="line">    <span class="comment">#是Linux 2.6以上版本内核中的高性能网络I/O模型，linux建议epoll，如果跑在FreeBSD上面，就用kqueue模型。</span></span><br><span class="line">    <span class="comment">#补充说明：</span></span><br><span class="line">    <span class="comment">#与apache相类，nginx针对不同的操作系统，有不同的事件模型</span></span><br><span class="line">    <span class="comment">#A）标准事件模型</span></span><br><span class="line">    <span class="comment">#Select、poll属于标准事件模型，如果当前系统不存在更有效的方法，nginx会选择select或poll</span></span><br><span class="line">    <span class="comment">#B）高效事件模型</span></span><br><span class="line">    <span class="comment">#Kqueue：使用于FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X.使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。</span></span><br><span class="line">    <span class="comment">#Epoll：使用于Linux内核2.6版本及以后的系统。</span></span><br><span class="line">    <span class="comment">#/dev/poll：使用于Solaris 7 11/99+，HP/UX 11.22+ (eventport)，IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。</span></span><br><span class="line">    <span class="comment">#Eventport：使用于Solaris 10。 为了防止出现内核崩溃的问题， 有必要安装安全补丁。</span></span><br><span class="line">    <span class="attribute">use</span> <span class="literal">epoll</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#单个进程最大连接数（最大连接数=连接数*进程数）</span></span><br><span class="line">    <span class="comment">#根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为。</span></span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">65535</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive超时时间。</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。</span></span><br><span class="line">    <span class="comment">#分页大小可以用命令getconf PAGESIZE 取得。</span></span><br><span class="line">    <span class="comment">#[root@web001 ~]# getconf PAGESIZE</span></span><br><span class="line">    <span class="comment">#4096</span></span><br><span class="line">    <span class="comment">#但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。</span></span><br><span class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">4k</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。</span></span><br><span class="line">    <span class="attribute">open_file_cache</span> max=<span class="number">65535</span> inactive=<span class="number">60s</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#这个是指多长时间检查一次缓存的有效信息。</span></span><br><span class="line">    <span class="comment">#语法:open_file_cache_valid time 默认值:open_file_cache_valid 60 使用字段:http, server, location 这个指令指定了何时需要检查open_file_cache中缓存项目的有效信息.</span></span><br><span class="line">    <span class="attribute">open_file_cache_valid</span> <span class="number">80s</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。</span></span><br><span class="line">    <span class="comment">#语法:open_file_cache_min_uses number 默认值:open_file_cache_min_uses 1 使用字段:http, server, location  这个指令指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数,如果使用更大的值,文件描述符在cache中总是打开状态.</span></span><br><span class="line">    <span class="attribute">open_file_cache_min_uses</span> <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#语法:open_file_cache_errors on | off 默认值:open_file_cache_errors off 使用字段:http, server, location 这个指令指定是否在搜索一个文件是记录cache错误.</span></span><br><span class="line">    <span class="attribute">open_file_cache_errors</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#设定http服务器，利用它的反向代理功能提供负载均衡支持</span></span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    <span class="attribute">include</span> mime.types;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#默认文件类型</span></span><br><span class="line">    <span class="attribute">default_type</span> application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#默认编码</span></span><br><span class="line">    <span class="comment">#charset utf-8;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#服务器名字的hash表大小</span></span><br><span class="line">    <span class="comment">#保存服务器名字的hash表是由指令server_names_hash_max_size 和server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表的大小，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找hash表键值成为可能。如果hash bucket size等于一路处理器缓存的大小，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。第一次是确定存储单元的地址，第二次是在存储单元中查找键 值。因此，如果Nginx给出需要增大hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小.</span></span><br><span class="line">    <span class="attribute">server_names_hash_bucket_size</span> <span class="number">128</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。</span></span><br><span class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">32k</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#客户请求头缓冲大小。nginx默认会用client_header_buffer_size这个buffer来读取header值，如果header过大，它会使用large_client_header_buffers来读取。</span></span><br><span class="line">    <span class="attribute">large_client_header_buffers</span> <span class="number">4</span> <span class="number">64k</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设定通过nginx上传文件的大小</span></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">8m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。</span></span><br><span class="line">    <span class="comment">#sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。</span></span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#开启目录列表访问，合适下载服务器，默认关闭。</span></span><br><span class="line">    <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用</span></span><br><span class="line">    <span class="attribute">tcp_nopush</span> <span class="literal">on</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#长连接超时时间，单位是秒</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">120</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。</span></span><br><span class="line">    <span class="attribute">fastcgi_connect_timeout</span> <span class="number">300</span>;</span><br><span class="line">    <span class="attribute">fastcgi_send_timeout</span> <span class="number">300</span>;</span><br><span class="line">    <span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">    <span class="attribute">fastcgi_buffer_size</span> <span class="number">64k</span>;</span><br><span class="line">    <span class="attribute">fastcgi_buffers</span> <span class="number">4</span> <span class="number">64k</span>;</span><br><span class="line">    <span class="attribute">fastcgi_busy_buffers_size</span> <span class="number">128k</span>;</span><br><span class="line">    <span class="attribute">fastcgi_temp_file_write_size</span> <span class="number">128k</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip模块设置</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>; <span class="comment">#开启gzip压缩输出</span></span><br><span class="line">    <span class="attribute">gzip_min_length</span> <span class="number">1k</span>;    <span class="comment">#最小压缩文件大小</span></span><br><span class="line">    <span class="attribute">gzip_buffers</span> <span class="number">4</span> <span class="number">16k</span>;    <span class="comment">#压缩缓冲区</span></span><br><span class="line">    <span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">0</span>;    <span class="comment">#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）</span></span><br><span class="line">    <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;    <span class="comment">#压缩等级</span></span><br><span class="line">    <span class="attribute">gzip_types</span> text/plain application/x-javascript text/css application/xml;    <span class="comment">#压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。</span></span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#开启限制IP连接数的时候需要使用</span></span><br><span class="line">    <span class="comment">#limit_zone crawler $binary_remote_addr 10m;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#负载均衡配置</span></span><br><span class="line">    <span class="attribute">upstream</span> piao.jd.com &#123;</span><br><span class="line">        <span class="comment">#upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。</span></span><br><span class="line">        <span class="attribute">server</span> <span class="number">192.168.80.121:80</span> weight=<span class="number">3</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">192.168.80.122:80</span> weight=<span class="number">2</span>;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">192.168.80.123:80</span> weight=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#nginx的upstream目前支持4种方式的分配</span></span><br><span class="line">    <span class="comment">#1、轮询（默认）</span></span><br><span class="line">    <span class="comment">#每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</span></span><br><span class="line">    <span class="comment">#upstream bakend &#123;</span></span><br><span class="line">    <span class="comment">#    server 192.168.0.14;</span></span><br><span class="line">    <span class="comment">#    server 192.168.0.15;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment">#2、weight</span></span><br><span class="line">    <span class="comment">#指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</span></span><br><span class="line">    <span class="comment">#例如：</span></span><br><span class="line">    <span class="comment">#upstream bakend &#123;</span></span><br><span class="line">    <span class="comment">#    server 192.168.0.14 weight=10;</span></span><br><span class="line">    <span class="comment">#    server 192.168.0.15 weight=10;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment">#2、ip_hash</span></span><br><span class="line">    <span class="comment">#每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</span></span><br><span class="line">    <span class="comment">#例如：</span></span><br><span class="line">    <span class="comment">#upstream bakend &#123;</span></span><br><span class="line">    <span class="comment">#    ip_hash;</span></span><br><span class="line">    <span class="comment">#    server 192.168.0.14:88;</span></span><br><span class="line">    <span class="comment">#    server 192.168.0.15:80;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment">#3、fair（第三方）</span></span><br><span class="line">    <span class="comment">#按后端服务器的响应时间来分配请求，响应时间短的优先分配。</span></span><br><span class="line">    <span class="comment">#upstream backend &#123;</span></span><br><span class="line">    <span class="comment">#    server server1;</span></span><br><span class="line">    <span class="comment">#    server server2;</span></span><br><span class="line">    <span class="comment">#    fair;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment">#4、url_hash（第三方）</span></span><br><span class="line">    <span class="comment">#按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</span></span><br><span class="line">    <span class="comment">#例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法</span></span><br><span class="line">    <span class="comment">#upstream backend &#123;</span></span><br><span class="line">    <span class="comment">#    server squid1:3128;</span></span><br><span class="line">    <span class="comment">#    server squid2:3128;</span></span><br><span class="line">    <span class="comment">#    hash $request_uri;</span></span><br><span class="line">    <span class="comment">#    hash_method crc32;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#tips:</span></span><br><span class="line">    <span class="comment">#upstream bakend&#123;#定义负载均衡设备的Ip及设备状态&#125;&#123;</span></span><br><span class="line">    <span class="comment">#    ip_hash;</span></span><br><span class="line">    <span class="comment">#    server 127.0.0.1:9090 down;</span></span><br><span class="line">    <span class="comment">#    server 127.0.0.1:8080 weight=2;</span></span><br><span class="line">    <span class="comment">#    server 127.0.0.1:6060;</span></span><br><span class="line">    <span class="comment">#    server 127.0.0.1:7070 backup;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment">#在需要使用负载均衡的server中增加 proxy_pass http://bakend/;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#每个设备的状态设置为:</span></span><br><span class="line">    <span class="comment">#1.down表示单前的server暂时不参与负载</span></span><br><span class="line">    <span class="comment">#2.weight为weight越大，负载的权重就越大。</span></span><br><span class="line">    <span class="comment">#3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误</span></span><br><span class="line">    <span class="comment">#4.fail_timeout:max_fails次失败后，暂停的时间。</span></span><br><span class="line">    <span class="comment">#5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#nginx支持同时设置多组的负载均衡，用来给不用的server来使用。</span></span><br><span class="line">    <span class="comment">#client_body_in_file_only设置为On 可以讲client post过来的数据记录到文件中用来做debug</span></span><br><span class="line">    <span class="comment">#client_body_temp_path设置记录文件的目录 可以设置最多3层目录</span></span><br><span class="line">    <span class="comment">#location对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">#虚拟主机的配置</span></span><br><span class="line">    server</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">#监听端口</span></span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#域名可以有多个，用空格隔开</span></span><br><span class="line">        <span class="attribute">server_name</span> www.jd.com jd.com;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm index.php;</span><br><span class="line">        <span class="attribute">root</span> /data/www/jd;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#对******进行负载均衡</span></span><br><span class="line">        <span class="comment"># ~  波浪线表示执行一个正则匹配，区分大小写</span></span><br><span class="line">        <span class="comment"># ~* 表示执行一个正则匹配，不区分大小写</span></span><br><span class="line">        <span class="comment"># ^~ 表示普通字符匹配，如果该选项匹配，只匹配该选项，不匹配别的选项，一般用来匹配目录</span></span><br><span class="line">        <span class="comment"># =  进行普通字符精确匹配</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*.(php|php5)?$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">            <span class="attribute">include</span> fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#图片缓存时间设置</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">expires</span> <span class="number">10d</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#JS和CSS缓存时间设置</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*.(js|css)?$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">expires</span> <span class="number">1h</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#日志格式设定</span></span><br><span class="line">        <span class="comment">#$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；</span></span><br><span class="line">        <span class="comment">#$remote_user：用来记录客户端用户名称；</span></span><br><span class="line">        <span class="comment">#$time_local： 用来记录访问时间与时区；</span></span><br><span class="line">        <span class="comment">#$request： 用来记录请求的url与http协议；</span></span><br><span class="line">        <span class="comment">#$status： 用来记录请求状态；成功是200，</span></span><br><span class="line">        <span class="comment">#$body_bytes_sent ：记录发送给客户端文件主体内容大小；</span></span><br><span class="line">        <span class="comment">#$http_referer：用来记录从那个页面链接访问过来的；</span></span><br><span class="line">        <span class="comment">#$http_user_agent：记录客户浏览器的相关信息；</span></span><br><span class="line">        <span class="comment">#通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。</span></span><br><span class="line">        <span class="attribute">log_format</span> access <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">        <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">        <span class="string">'"<span class="variable">$http_user_agent</span>" <span class="variable">$http_x_forwarded_for</span>'</span>;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#定义本虚拟主机的访问日志</span></span><br><span class="line">        <span class="attribute">access_log</span>  /usr/local/nginx/logs/host.access.log  main;</span><br><span class="line">        <span class="attribute">access_log</span>  /usr/local/nginx/logs/host.access.<span class="number">404</span>.log  log404;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#对 "/" 启用反向代理</span></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://127.0.0.1:88;</span><br><span class="line">            <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">             </span><br><span class="line">            <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">             </span><br><span class="line">            <span class="comment">#以下是一些反向代理的配置，可选。</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">            <span class="attribute">client_max_body_size</span> <span class="number">10m</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数，</span></span><br><span class="line">            <span class="comment">#如果把它设置为比较大的数值，例如256k，那么，无论使用firefox还是IE浏览器，来提交任意小于256k的图片，都很正常。如果注释该指令，使用默认的client_body_buffer_size设置，也就是操作系统页面大小的两倍，8k或者16k，问题就出现了。</span></span><br><span class="line">            <span class="comment">#无论使用firefox4.0还是IE8.0，提交一个比较大，200k左右的图片，都返回500 Internal Server Error错误</span></span><br><span class="line">            <span class="attribute">client_body_buffer_size</span> <span class="number">128k</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#表示使nginx阻止HTTP应答代码为400或者更高的应答。</span></span><br><span class="line">            <span class="attribute">proxy_intercept_errors</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#后端服务器连接的超时时间_发起握手等候响应超时时间</span></span><br><span class="line">            <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">            <span class="attribute">proxy_connect_timeout</span> <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">            <span class="comment">#后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据</span></span><br><span class="line">            <span class="attribute">proxy_send_timeout</span> <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">            <span class="comment">#连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）</span></span><br><span class="line">            <span class="attribute">proxy_read_timeout</span> <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">            <span class="comment">#设置从被代理服务器读取的第一部分应答的缓冲区大小，通常情况下这部分应答中包含一个小的应答头，默认情况下这个值的大小为指令proxy_buffers中指定的一个缓冲区的大小，不过可以将其设置为更小</span></span><br><span class="line">            <span class="attribute">proxy_buffer_size</span> <span class="number">4k</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的设置</span></span><br><span class="line">            <span class="comment">#设置用于读取应答（来自被代理服务器）的缓冲区数目和大小，默认情况也为分页大小，根据操作系统的不同可能是4k或者8k</span></span><br><span class="line">            <span class="attribute">proxy_buffers</span> <span class="number">4</span> <span class="number">32k</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">            <span class="attribute">proxy_busy_buffers_size</span> <span class="number">64k</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">#设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长</span></span><br><span class="line">            <span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">            <span class="attribute">proxy_temp_file_write_size</span> <span class="number">64k</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">        <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">        <span class="attribute">location</span> /NginxStatus &#123;</span><br><span class="line">            <span class="attribute">stub_status</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">access_log</span> <span class="literal">on</span>;</span><br><span class="line">            <span class="attribute">auth_basic</span> <span class="string">"NginxStatus"</span>;</span><br><span class="line">            <span class="attribute">auth_basic_user_file</span> confpasswd;</span><br><span class="line">            <span class="comment">#htpasswd文件的内容可以用apache提供的htpasswd工具来产生。</span></span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#本地动静分离反向代理配置</span></span><br><span class="line">        <span class="comment">#所有jsp的页面均交由tomcat或resin处理</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .(jsp|jspx|do)?$</span> &#123;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://127.0.0.1:8080;</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">#所有静态文件由nginx直接读取不经过tomcat或resin</span></span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|</span></span><br><span class="line"><span class="regexp"></span>        pdf|xls|mp3|wma)$</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attribute">expires</span> <span class="number">15d</span>; </span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ .*.(js|css)?$</span></span><br><span class="line"><span class="regexp"></span>        &#123;</span><br><span class="line">            <span class="attribute">expires</span> <span class="number">1h</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">######Nginx配置文件nginx.conf中文详解#####</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Server" scheme="http://mindasoft.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>Nginx在Linux下的安装</title>
    <link href="http://mindasoft.com/2017/12/15/server/Nginx%E5%AE%89%E8%A3%85/"/>
    <id>http://mindasoft.com/2017/12/15/server/Nginx安装/</id>
    <published>2017-12-15T07:28:52.000Z</published>
    <updated>2018-02-07T09:42:59.055Z</updated>
    
    <content type="html"><![CDATA[<p>系统平台：CentOS release 6.6 (Final) 64位。</p><h1 id="安装编译工具及库文件"><a href="#安装编译工具及库文件" class="headerlink" title="安装编译工具及库文件"></a>安装编译工具及库文件</h1><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make <span class="literal">zlib</span> <span class="literal">zlib</span>-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure><h1 id="首先要安装-PCRE"><a href="#首先要安装-PCRE" class="headerlink" title="首先要安装 PCRE"></a>首先要安装 PCRE</h1><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。</p><p>1、下载 PCRE 安装包，下载地址： <a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz" target="_blank" rel="noopener">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a><br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ngnix src]<span class="meta"># wget http:<span class="comment">//downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span></span></span><br></pre></td></tr></table></figure></p><p>2、解压安装包:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@ngnix src]</span># <span class="selector-tag">tar</span> <span class="selector-tag">zxvf</span> <span class="selector-tag">pcre-8</span><span class="selector-class">.35</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure></p><p>3、进入安装包目录<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@ngnix</span> src]<span class="meta"># cd pcre-8.35</span></span><br></pre></td></tr></table></figure></p><p>4、编译安装<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@ngnix</span> pcre<span class="number">-8.35</span>]<span class="meta"># ./configure</span></span><br><span class="line">[root<span class="symbol">@ngnix</span> pcre<span class="number">-8.35</span>]<span class="meta"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p><p>5、查看pcre版本<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@ngnix</span> pcre<span class="number">-8.35</span>]<span class="meta"># pcre-config --version</span></span><br></pre></td></tr></table></figure></p><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><p>1、下载 Nginx，下载地址：<a href="http://nginx.org/download/nginx-1.6.2.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.6.2.tar.gz</a><br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ngnix src]<span class="meta"># wget http:<span class="comment">//nginx.org/download/nginx-1.6.2.tar.gz</span></span></span><br></pre></td></tr></table></figure></p><p>2、解压安装包<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@ngnix src]</span># <span class="selector-tag">tar</span> <span class="selector-tag">zxvf</span> <span class="selector-tag">nginx-1</span><span class="selector-class">.6</span><span class="selector-class">.2</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure></p><p>3、进入安装包目录<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@ngnix src]</span># <span class="selector-tag">cd</span> <span class="selector-tag">nginx-1</span><span class="selector-class">.6</span><span class="selector-class">.2</span></span><br></pre></td></tr></table></figure></p><p>4、编译安装<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@ngnix</span> nginx<span class="number">-1.6</span><span class="number">.2</span>]# ./configure --prefix=<span class="regexp">/usr/</span>local/webserver/nginx --<span class="keyword">with</span>-http_stub_status_module --<span class="keyword">with</span>-http_ssl_module --<span class="keyword">with</span>-pcre=<span class="regexp">/usr/</span>local/src/pcre<span class="number">-8.35</span></span><br><span class="line">[root<span class="meta">@ngnix</span> nginx<span class="number">-1.6</span><span class="number">.2</span>]# make</span><br><span class="line">[root<span class="meta">@ngnix</span> nginx<span class="number">-1.6</span><span class="number">.2</span>]# make install</span><br></pre></td></tr></table></figure></p><p>5、查看nginx版本<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ngnix nginx-<span class="number">1.6</span>.<span class="number">2</span>]# <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx -v</span><br></pre></td></tr></table></figure></p><p>到此，nginx安装完成。</p><h1 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h1><p>创建 Nginx 运行使用的用户 www：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@ngnix</span> conf]<span class="meta"># /usr/sbin/groupadd www </span></span><br><span class="line">[root<span class="symbol">@ngnix</span> conf]<span class="meta"># /usr/sbin/useradd -g www www</span></span><br></pre></td></tr></table></figure></p><p>配置nginx.conf ，将/usr/local/webserver/nginx/conf/nginx.conf替换为以下内容<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ngnix <span class="keyword">conf</span>]#  <span class="keyword">cat</span> /usr/<span class="keyword">local</span>/webserver/nginx/<span class="keyword">conf</span>/nginx.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure></p><p>显示如下：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span> www www;</span><br><span class="line"><span class="attribute">worker_processes</span> <span class="number">2</span>; <span class="comment">#设置值和CPU核心数一致</span></span><br><span class="line"><span class="attribute">error_log</span> /usr/local/webserver/nginx/logs/nginx_error.log <span class="literal">crit</span>; <span class="comment">#日志位置和日志级别</span></span><br><span class="line"><span class="attribute">pid</span> /usr/local/webserver/nginx/nginx.pid;</span><br><span class="line"><span class="comment">#Specifies the value for maximum file descriptors that can be opened by this process.</span></span><br><span class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">65535</span>;</span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">use</span> <span class="literal">epoll</span>;</span><br><span class="line">  <span class="attribute">worker_connections</span> <span class="number">65535</span>;</span><br><span class="line">&#125;</span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">include</span> mime.types;</span><br><span class="line">  <span class="attribute">default_type</span> application/octet-stream;</span><br><span class="line">  <span class="attribute">log_format</span> main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">               <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">               <span class="string">'"<span class="variable">$http_user_agent</span>" <span class="variable">$http_x_forwarded_for</span>'</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">#charset gb2312;</span></span><br><span class="line">     </span><br><span class="line">  <span class="attribute">server_names_hash_bucket_size</span> <span class="number">128</span>;</span><br><span class="line">  <span class="attribute">client_header_buffer_size</span> <span class="number">32k</span>;</span><br><span class="line">  <span class="attribute">large_client_header_buffers</span> <span class="number">4</span> <span class="number">32k</span>;</span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">8m</span>;</span><br><span class="line">     </span><br><span class="line">  <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">tcp_nopush</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">keepalive_timeout</span> <span class="number">60</span>;</span><br><span class="line">  <span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;</span><br><span class="line">  <span class="attribute">fastcgi_connect_timeout</span> <span class="number">300</span>;</span><br><span class="line">  <span class="attribute">fastcgi_send_timeout</span> <span class="number">300</span>;</span><br><span class="line">  <span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">  <span class="attribute">fastcgi_buffer_size</span> <span class="number">64k</span>;</span><br><span class="line">  <span class="attribute">fastcgi_buffers</span> <span class="number">4</span> <span class="number">64k</span>;</span><br><span class="line">  <span class="attribute">fastcgi_busy_buffers_size</span> <span class="number">128k</span>;</span><br><span class="line">  <span class="attribute">fastcgi_temp_file_write_size</span> <span class="number">128k</span>;</span><br><span class="line">  <span class="attribute">gzip</span> <span class="literal">on</span>; </span><br><span class="line">  <span class="attribute">gzip_min_length</span> <span class="number">1k</span>;</span><br><span class="line">  <span class="attribute">gzip_buffers</span> <span class="number">4</span> <span class="number">16k</span>;</span><br><span class="line">  <span class="attribute">gzip_http_version</span> <span class="number">1</span>.<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">gzip_types</span> text/html text/xml text/javascript application/x-javascript application/javascript text/css text/plain image/png image/jpeg image/gif;</span><br><span class="line">  <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">#limit_zone crawler $binary_remote_addr 10m;</span></span><br><span class="line"> <span class="comment">#下面是server虚拟主机的配置</span></span><br><span class="line"> server</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;<span class="comment">#监听端口</span></span><br><span class="line">    <span class="attribute">server_name</span> localhost;<span class="comment">#域名</span></span><br><span class="line">    <span class="attribute">index</span> index.html index.htm index.php;</span><br><span class="line">    <span class="attribute">root</span> /usr/local/webserver/nginx/html;<span class="comment">#站点目录</span></span><br><span class="line">      <span class="attribute">location</span> <span class="regexp">~ .*\.(php|php5)?$</span></span><br><span class="line"><span class="regexp"></span>    &#123;</span><br><span class="line">      <span class="comment">#fastcgi_pass unix:/tmp/php-cgi.sock;</span></span><br><span class="line">      <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">      <span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">      <span class="attribute">include</span> fastcgi.conf;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$</span></span><br><span class="line"><span class="regexp"></span>    &#123;</span><br><span class="line">      <span class="attribute">expires</span> <span class="number">30d</span>;</span><br><span class="line">  <span class="comment"># access_log off;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span></span><br><span class="line"><span class="regexp"></span>    &#123;</span><br><span class="line">      <span class="attribute">expires</span> <span class="number">15d</span>;</span><br><span class="line">   <span class="comment"># access_log off;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>检查配置文件ngnix.conf的正确性命令：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ngnix conf]# <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx -t</span><br></pre></td></tr></table></figure></p><h1 id="Nginx命令"><a href="#Nginx命令" class="headerlink" title="Nginx命令"></a>Nginx命令</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx                      <span class="comment"># 启动 Nginx</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx -s reload            <span class="comment"># 重新载入配置文件</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx -s reopen            <span class="comment"># 重启 Nginx</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx -s stop              <span class="comment"># 停止 Nginx</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;系统平台：CentOS release 6.6 (Final) 64位。&lt;/p&gt;
&lt;h1 id=&quot;安装编译工具及库文件&quot;&gt;&lt;a href=&quot;#安装编译工具及库文件&quot; class=&quot;headerlink&quot; title=&quot;安装编译工具及库文件&quot;&gt;&lt;/a&gt;安装编译工具及库文件&lt;/
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Server" scheme="http://mindasoft.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>idea的使用</title>
    <link href="http://mindasoft.com/2017/12/05/Java/idea%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://mindasoft.com/2017/12/05/Java/idea的使用/</id>
    <published>2017-12-05T05:16:08.000Z</published>
    <updated>2018-01-02T02:14:06.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-修改对应的配置信息-缓存-地址"><a href="#1-修改对应的配置信息-缓存-地址" class="headerlink" title="1 修改对应的配置信息(缓存)地址"></a>1 修改对应的配置信息(缓存)地址</h1><p>由于我家里的电脑C盘被我设置得超级小,然后Idea默认的各种系统配置,最主要是缓存的地址,修改 ${idea.home}/bin/idea.properties 修改下面几个值.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">15. <span class="comment">#---------------------------------------------------------------------  </span></span><br><span class="line">16. <span class="comment"># Uncomment this option if you want to customize path to IDE config folder. Make sure you're using forward slashes  </span></span><br><span class="line">17. <span class="comment">#---------------------------------------------------------------------  </span></span><br><span class="line">18. idea.config.path=D:<span class="string">/dev_soft/IntelliJ</span> IDEA 12.0.1/bin/<span class="string">.IntelliJIdea/config</span>  </span><br><span class="line">19.   </span><br><span class="line">20. <span class="comment">#---------------------------------------------------------------------  </span></span><br><span class="line">21. <span class="comment"># Uncomment this option if you want to customize path to IDE system folder. Make sure you're using forward slashes  </span></span><br><span class="line">22. <span class="comment">#---------------------------------------------------------------------  </span></span><br><span class="line">23. idea.system.path=D:<span class="string">/dev_soft/IntelliJ</span> IDEA 12.0.1/bin/<span class="string">.IntelliJIdea/system</span>  </span><br><span class="line">24.   </span><br><span class="line">25. <span class="comment">#---------------------------------------------------------------------  </span></span><br><span class="line">26. <span class="comment"># Uncomment this option if you want to customize path to user installed plugins folder. Make sure you're using forward slashes  </span></span><br><span class="line">27. <span class="comment">#---------------------------------------------------------------------  </span></span><br><span class="line">28. idea.plugins.path=D:<span class="string">/dev_soft/IntelliJ</span> IDEA 12.0.1/bin/<span class="string">.IntelliJIdea/config/plugins</span></span><br></pre></td></tr></table></figure><h1 id="2-修改快捷键"><a href="#2-修改快捷键" class="headerlink" title="2 修改快捷键"></a>2 修改快捷键</h1><p>  key/map 选择eclipse ,选择copy成自定义 (我还是习惯用eclipse的快捷键)</p><h1 id="3-配置修改"><a href="#3-配置修改" class="headerlink" title="3 配置修改"></a>3 配置修改</h1><p>1、修改主题 File | Settings | Appearance &amp; Behavior | Appearance ： Theme选择 Darcula<br>2、显示行号：Settings-&gt;Editor-&gt;Appearance标签项，勾选Show line numbers<br>3、选择字体大小：File | Settings | Editor | Font 15<br>4、Tab换成字符串 ：File | Settings | Editor | Code Style | Java –&gt; Use tab charactor<br>3、生成Serializable ID  ，setting–&gt;Editor–&gt;Inspactions–&gt;Java | Serialization issues | Serializable class without ‘serialVersionUID’ 打上勾<br>4、maven 工程 unable to read the metadata file for artifact 问题 :setting-&gt;maven-&gt;always update snapshot 打开,然后重新import change就搞定了.</p><h1 id="4、代码Templates"><a href="#4、代码Templates" class="headerlink" title="4、代码Templates"></a>4、代码Templates</h1><p>File | Settings | Editor | File and Code Templates –&gt; Includes–&gt;File Header<br>/**</p><ul><li>Company：MGTV</li><li>User: huangmin</li><li>DateTime: ${DATE} ${TIME}<br>*/</li></ul><p>File | Settings | Editor | Live Templates<br>添加Templates group ，再添加 Live Template。<br>private static final Logger LOGGER = LoggerFactory.getLogger($CLASS$.class);<br>点击$CLASS$  ，点击edit variables，选择getClassName()</p><h1 id="5、常用插件"><a href="#5、常用插件" class="headerlink" title="5、常用插件"></a>5、常用插件</h1><p>Mybatis<br>自动转换对象插件 generateO2O  快捷键 alt+insert<br> 快捷键提示插件Key Promoter<br>大小写转换插件  UpperLowerCapitalize  :  安装后快捷键alt+P全部大写     alt+L全部小写      alt+C开头字母大写<br>查看maven的依赖树 Maven Helper </p><h1 id="6、常用快捷键"><a href="#6、常用快捷键" class="headerlink" title="6、常用快捷键"></a>6、常用快捷键</h1><p>fori/sout/psvm+Tab<br>.for+Tab<br>.var+Tab</p><p>Top #10切来切去：Ctrl+Tab<br>Top #9选你所想：Ctrl+W<br>Top #8代码生成：Template/Postfix +Tab<br>Top #7发号施令：Ctrl+Shift+A<br>Top #6无处藏身：Shift+Shift<br>Top #5自动完成：Ctrl+Shift+Enter<br>Top #4创造万物：Alt+Insert</p><p>太难割舍，前三名并列吧！<br>Top #1智能补全：Ctrl+Shift+Space<br>Top #1自我修复：Alt+Enter<br>Top #1重构一切：Ctrl+Shift+Alt+T</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-修改对应的配置信息-缓存-地址&quot;&gt;&lt;a href=&quot;#1-修改对应的配置信息-缓存-地址&quot; class=&quot;headerlink&quot; title=&quot;1 修改对应的配置信息(缓存)地址&quot;&gt;&lt;/a&gt;1 修改对应的配置信息(缓存)地址&lt;/h1&gt;&lt;p&gt;由于我家里的电脑C盘
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Java" scheme="http://mindasoft.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>mysql事件（计划任务）</title>
    <link href="http://mindasoft.com/2017/09/04/Database/mysql%E4%BA%8B%E4%BB%B6%EF%BC%88%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%EF%BC%89/"/>
    <id>http://mindasoft.com/2017/09/04/Database/mysql事件（计划任务）/</id>
    <published>2017-09-04T07:16:08.000Z</published>
    <updated>2017-12-05T02:41:49.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h1><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"></span><br><span class="line">-- <span class="number">1</span>、设置 全局变量event_scheduler开启，使用event必须开启</span><br><span class="line">-- SET GLOBAL event_scheduler = ON$$     -- required <span class="keyword">for</span> event to execute but not create    </span><br><span class="line"></span><br><span class="line">CREATE/*[DEFINER = &#123; user | <span class="type">CURRENT_USER</span> &#125;]*/EVENT `start_distribution`.`event_account_checking`</span><br><span class="line"></span><br><span class="line">ON SCHEDULE EVERY <span class="number">1</span> DAY STARTS '<span class="number">2017</span><span class="number">-09</span><span class="number">-04</span> <span class="number">06</span>:<span class="number">00</span>:<span class="number">00</span>' </span><br><span class="line">ON COMPLETION NOT PRESERVE</span><br><span class="line">ENABLE</span><br><span class="line">COMMENT '每天自动统计对账数据'</span><br><span class="line"></span><br><span class="line"> /* uncomment the example below you want to use */</span><br><span class="line"></span><br><span class="line">-- scheduleexample <span class="number">1</span>: run <span class="built_in">once</span>  执行一次</span><br><span class="line"></span><br><span class="line">   --  AT 'YYYY-MM-DD HH:MM.SS'/CURRENT_TIMESTAMP &#123; + INTERVAL <span class="number">1</span> [HOUR|<span class="type">MONTH</span>|<span class="type">WEEK</span>|<span class="type">DAY</span>|<span class="type">MINUTE</span>|<span class="type">...] &#125;</span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">-- scheduleexample</span> <span class="number">2</span>: run <span class="built_in">at</span> intervals forever <span class="built_in">after</span> creation  创建后每多久执行一次</span><br><span class="line"></span><br><span class="line">   -- EVERY <span class="number">1</span> [HOUR|<span class="type">MONTH</span>|<span class="type">WEEK</span>|<span class="type">DAY</span>|<span class="type">MINUTE</span>|<span class="type">...]</span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">-- scheduleexample</span> <span class="number">3</span>: specified start <span class="built_in">time</span>, <span class="keyword">end</span> <span class="built_in">time</span> and interval <span class="keyword">for</span> execution 指定开始开始、结束时间和间隔时间执行任务。</span><br><span class="line">   /*EVERY <span class="number">1</span>  [HOUR|<span class="type">MONTH</span>|<span class="type">WEEK</span>|<span class="type">DAY</span>|<span class="type">MINUTE</span>|<span class="type">...]</span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">   STARTS</span> CURRENT_TIMESTAMP/'YYYY-MM-DD HH:MM.SS' &#123; + INTERVAL <span class="number">1</span>[HOUR|<span class="type">MONTH</span>|<span class="type">WEEK</span>|<span class="type">DAY</span>|<span class="type">MINUTE</span>|<span class="type">...] &#125;</span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">   ENDS</span> CURRENT_TIMESTAMP/'YYYY-MM-DD HH:MM.SS' &#123; + INTERVAL <span class="number">1</span> [HOUR|<span class="type">MONTH</span>|<span class="type">WEEK</span>|<span class="type">DAY</span>|<span class="type">MINUTE</span>|<span class="type">...] &#125; */</span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">/*[ON</span> COMPLETION [NOT] PRESERVE]  -- 执行后删除(NOT)还是保留</span><br><span class="line">[ENABLE | <span class="type">DISABLE</span>]  -- 创建时，event的章台</span><br><span class="line">[COMMENT 'comment']*/  -- 注释</span><br><span class="line"></span><br><span class="line">DO</span><br><span class="line">BEGIN</span><br><span class="line">    call pro_account_checking();</span><br><span class="line">END$$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;例子：&quot;&gt;&lt;a href=&quot;#例子：&quot; class=&quot;headerlink&quot; title=&quot;例子：&quot;&gt;&lt;/a&gt;例子：&lt;/h1&gt;&lt;figure class=&quot;highlight coq&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Database" scheme="http://mindasoft.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>mysql存储过程</title>
    <link href="http://mindasoft.com/2017/08/18/Database/mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://mindasoft.com/2017/08/18/Database/mysql存储过程/</id>
    <published>2017-08-18T07:16:08.000Z</published>
    <updated>2017-12-05T02:41:49.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>存储过程</strong>是可编程的函数，在数据库中创建并保存，可以由SQL语句和控制结构组成。当想要在不同的应用程序或平台上执行相同的函数，或者封装特定功能时，存储过程是非常有用的。数据库中的存储过程可以看做是对编程中面向对象方法的模拟，它允许控制数据的访问方式。</p><p>存储过程是数据库的一个重要的功能，MySQL 5.0以前并不支持存储过程，这使得MySQL在应用上大打折扣。好在MySQL 5.0开始支持存储过程，这样即可以大大提高数据库的处理速度，同时也可以提高数据库编程的灵活性。</p><h1 id="存储过程的优点"><a href="#存储过程的优点" class="headerlink" title="存储过程的优点"></a>存储过程的优点</h1><p>(1).增强SQL语言的功能和灵活性：存储过程可以用控制语句编写，有很强的灵活性，可以完成复杂的判断和较复杂的运算。</p><p>(2).标准组件式编程：存储过程被创建后，可以在程序中被多次调用，而不必重新编写该存储过程的SQL语句。而且数据库专业人员可以随时对存储过程进行修改，对应用程序源代码毫无影响。</p><p>(3).较快的执行速度：如果某一操作包含大量的Transaction-SQL代码或分别被多次执行，那么存储过程要比批处理的执行速度快很多。因为存储过程是预编译的。在首次运行一个存储过程时查询，优化器对其进行分析优化，并且给出最终被存储在系统表中的执行计划。而批处理的Transaction-SQL语句在每次运行时都要进行编译和优化，速度相对要慢一些。</p><p>(4).减少网络流量：针对同一个数据库对象的操作（如查询、修改），如果这一操作所涉及的Transaction-SQL语句被组织进存储过程，那么当在客户计算机上调用该存储过程时，网络中传送的只是该调用语句，从而大大减少网络流量并降低了网络负载。</p><p>(5).作为一种安全机制来充分利用：通过对执行某一存储过程的权限进行限制，能够实现对相应的数据的访问权限的限制，避免了非授权用户对数据的访问，保证了数据的安全。</p><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"></span><br><span class="line">USE `start_user`$$</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="symbol">`rob_test`</span>$$</span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    <span class="comment">/*[DEFINER = &#123; user | CURRENT_USER &#125;]*/</span></span><br><span class="line"></span><br><span class="line">-- <span class="number">0</span>、定义存储过程名称和参数、返回值</span><br><span class="line">-- <span class="keyword">in</span> 为输入参数；out 为返回值，inout 即是参数也是返回值 </span><br><span class="line">    <span class="keyword">PROCEDURE</span> <span class="symbol">`start_user`</span>.<span class="symbol">`rob_test`</span>( out msg VARCHAR(<span class="number">50</span>) )</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* LANGUAGE SQL</span></span><br><span class="line"><span class="comment">    | [NOT] DETERMINISTIC</span></span><br><span class="line"><span class="comment">    | &#123; CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA &#125;</span></span><br><span class="line"><span class="comment">    | SQL SECURITY &#123; DEFINER | INVOKER &#125;</span></span><br><span class="line"><span class="comment">    | COMMENT 'string'</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">-- <span class="number">1</span>、声明变量</span><br><span class="line"><span class="keyword">DECLARE</span> userId int;</span><br><span class="line">DECLARE i int;</span><br><span class="line">DECLARE phoneId BIGint;</span><br><span class="line"></span><br><span class="line">-- 2、赋值，也可以用DEFAULT，如：DECLARE i int DEFAULT 0;</span><br><span class="line">SET i=0;</span><br><span class="line">SET phoneId= 11010000002;</span><br><span class="line"></span><br><span class="line">-- 3、业务逻辑，此处用循环插入数据</span><br><span class="line">while i&lt;5 do</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="symbol">`start_user`</span>.<span class="symbol">`user`</span> (<span class="symbol">`nickName`</span>, <span class="symbol">`gender`</span>, <span class="symbol">`mobile`</span>, <span class="symbol">`signatureText`</span>, <span class="symbol">`avatarUrl`</span>, <span class="symbol">`userType`</span>, <span class="symbol">`isUserGroup`</span>, <span class="symbol">`status`</span>, <span class="symbol">`channel`</span>, <span class="symbol">`inviteGuestPermission`</span>, <span class="symbol">`reported`</span>, <span class="symbol">`flag`</span>, <span class="symbol">`appId`</span>, <span class="symbol">`loginBundleId`</span>) <span class="keyword">VALUES</span>(CONCAT(<span class="string">'机器人'</span>,i),<span class="string">'MALE'</span>,CONCAT(phoneId,<span class="string">''</span>),<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="string">'NORMAL'</span>,<span class="literal">NULL</span>,<span class="string">'1'</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">SELECT</span> LAST_INSERT_ID() <span class="keyword">INTO</span> userId ; </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="symbol">`start_distribution`</span>.<span class="symbol">`dis_org_startuser`</span> ( <span class="symbol">`orgId`</span>, <span class="symbol">`agentId`</span>, <span class="symbol">`cooperatorId`</span>, <span class="symbol">`opcenterId`</span>, <span class="symbol">`startUserId`</span>, <span class="symbol">`startUserType`</span>, <span class="symbol">`inviteUserId`</span>) <span class="keyword">values</span>(<span class="string">'999992348'</span>,<span class="string">'999992347'</span>,<span class="string">'999992346'</span>,<span class="string">'999992345'</span>,userId,<span class="string">'ANCHOR'</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">set i=i+1;</span><br><span class="line">set phoneId= phoneId+1;</span><br><span class="line">end while;</span><br><span class="line"></span><br><span class="line">-- 4、结束循环，设定返回值</span><br><span class="line">set msg ='执行成功';</span><br><span class="line">    END$$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>CREATE PROCEDURE 过程名([[IN|OUT|INOUT] 参数名 数据类型[,[IN|OUT|INOUT] 参数名 数据类型…]]) [特性 …] 过程体</p><h2 id="结束符"><a href="#结束符" class="headerlink" title="结束符"></a>结束符</h2><p>DELIMITER 定义语句结束符。首先将结束符变为“$$”,在完成存储过程之后再将结束符改为默认的“;”。</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>存储过程根据需要可能会有输入、输出、输入输出参数，如果有多个参数用”,”分割开。MySQL存储过程的参数用在存储过程的定义，共有三种参数类型,IN,OUT,INOUT:</p><p><strong>IN</strong>：参数的值必须在调用存储过程时指定，在存储过程中修改该参数的值不能被返回，为默认值<br><strong>OUT</strong>:该值可在存储过程内部被改变，并可返回<br><strong>INOUT</strong>:调用时指定，并且可被改变和返回</p><h2 id="过程体"><a href="#过程体" class="headerlink" title="过程体"></a>过程体</h2><p>过程体的开始与结束使用BEGIN与END进行标识。</p><h2 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h2><p>语法：SET 变量名 = 变量值 [,变量名= 变量值 …]</p><h2 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h2><p>用户变量一般以@开头<br>注意：滥用用户变量会导致程序难以理解及管理</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>MySQL存储过程可使用两种风格的注释：<br>双杠：–，该风格一般用于单行注释<br>C风格： 一般用于多行注释</p><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>用call和你过程名以及一个括号，括号里面根据需要，加入参数，参数包括输入参数、输出参数、输入输出参数。</p><h2 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h2><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><h4 id="IF-THEN-ELSE语句"><a href="#IF-THEN-ELSE语句" class="headerlink" title="IF-THEN-ELSE语句"></a>IF-THEN-ELSE语句</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">DROP <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">IF</span> <span class="title">EXISTS</span> <span class="title">proc3</span>;</span></span><br><span class="line">DELIMITER <span class="comment">//</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">proc3</span><span class="params">(<span class="keyword">IN</span> parameter int)</span></span></span><br><span class="line"><span class="function">  <span class="title">BEGIN</span></span></span><br><span class="line"><span class="function">    <span class="title">DECLARE</span> <span class="title">var</span> <span class="title">int</span>;</span></span><br><span class="line">    <span class="keyword">SET</span> <span class="keyword">var</span>=parameter+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">IF</span> <span class="keyword">var</span>=<span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">      INSERT <span class="keyword">INTO</span> t VALUES (<span class="number">17</span>);</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span> ;</span><br><span class="line">    <span class="keyword">IF</span> parameter=<span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">      UPDATE t <span class="keyword">SET</span> s1=s1+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">ELSE</span></span><br><span class="line">      UPDATE t <span class="keyword">SET</span> s1=s1+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span> ;</span><br><span class="line">  <span class="keyword">END</span> ;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h4 id="CASE-WHEN-THEN-ELSE语句"><a href="#CASE-WHEN-THEN-ELSE语句" class="headerlink" title="CASE-WHEN-THEN-ELSE语句"></a>CASE-WHEN-THEN-ELSE语句</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER <span class="comment">//</span></span><br><span class="line">  <span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">proc4</span> <span class="params">(<span class="keyword">IN</span> parameter INT)</span></span></span><br><span class="line"><span class="function">    <span class="title">BEGIN</span></span></span><br><span class="line"><span class="function">      <span class="title">DECLARE</span> <span class="title">var</span> <span class="title">INT</span>;</span></span><br><span class="line">      <span class="keyword">SET</span> <span class="keyword">var</span>=parameter+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">CASE</span> <span class="keyword">var</span></span><br><span class="line">        WHEN <span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">          INSERT <span class="keyword">INTO</span> t VALUES (<span class="number">17</span>);</span><br><span class="line">        WHEN <span class="number">1</span> <span class="keyword">THEN</span></span><br><span class="line">          INSERT <span class="keyword">INTO</span> t VALUES (<span class="number">18</span>);</span><br><span class="line">        <span class="keyword">ELSE</span></span><br><span class="line">          INSERT <span class="keyword">INTO</span> t VALUES (<span class="number">19</span>);</span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">CASE</span> ;</span><br><span class="line">    <span class="keyword">END</span> ;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><h4 id="WHILE-DO…END-WHILE"><a href="#WHILE-DO…END-WHILE" class="headerlink" title="WHILE-DO…END-WHILE"></a>WHILE-DO…END-WHILE</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER <span class="comment">//</span></span><br><span class="line">  <span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">proc5</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="title">BEGIN</span></span></span><br><span class="line"><span class="function">      <span class="title">DECLARE</span> <span class="title">var</span> <span class="title">INT</span>;</span></span><br><span class="line">      <span class="keyword">SET</span> <span class="keyword">var</span>=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">WHILE</span> <span class="keyword">var</span>&lt;<span class="number">6</span> <span class="keyword">DO</span></span><br><span class="line">        INSERT <span class="keyword">INTO</span> t VALUES (<span class="keyword">var</span>);</span><br><span class="line">        <span class="keyword">SET</span> <span class="keyword">var</span>=<span class="keyword">var</span>+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">WHILE</span> ;</span><br><span class="line">    <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h4 id="REPEAT…END-REPEAT"><a href="#REPEAT…END-REPEAT" class="headerlink" title="REPEAT…END REPEAT"></a>REPEAT…END REPEAT</h4><p>此语句的特点是执行操作后检查结果<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER <span class="comment">//</span></span><br><span class="line">  <span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">proc6</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="title">BEGIN</span></span></span><br><span class="line"><span class="function">      <span class="title">DECLARE</span> <span class="title">v</span> <span class="title">INT</span>;</span></span><br><span class="line">      <span class="keyword">SET</span> v=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">REPEAT</span></span><br><span class="line">        INSERT <span class="keyword">INTO</span> t VALUES(v);</span><br><span class="line">        <span class="keyword">SET</span> v=v+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">UNTIL</span> v&gt;=<span class="number">5</span></span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">REPEAT</span>;</span><br><span class="line">    <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure></p><h4 id="LOOP…END-LOOP"><a href="#LOOP…END-LOOP" class="headerlink" title="LOOP…END LOOP"></a>LOOP…END LOOP</h4><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER <span class="comment">//</span></span><br><span class="line">  <span class="keyword">CREATE</span> <span class="function"><span class="keyword">PROCEDURE</span> <span class="title">proc7</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="title">BEGIN</span></span></span><br><span class="line"><span class="function">      <span class="title">DECLARE</span> <span class="title">v</span> <span class="title">INT</span>;</span></span><br><span class="line">      <span class="keyword">SET</span> v=<span class="number">0</span>;</span><br><span class="line">      LOOP_LABLE:<span class="keyword">LOOP</span></span><br><span class="line">        INSERT <span class="keyword">INTO</span> t VALUES(v);</span><br><span class="line">        <span class="keyword">SET</span> v=v+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">IF</span> v &gt;=<span class="number">5</span> <span class="keyword">THEN</span></span><br><span class="line">          LEAVE LOOP_LABLE;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">    <span class="keyword">END</span>;</span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">DELIMITER ;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">#### LABLES标号</span><br><span class="line">标号可以用在<span class="keyword">begin</span> <span class="keyword">repeat</span> <span class="keyword">while</span> 或者<span class="keyword">loop</span> 语句前，语句标号只能在合法的语句前面使用。可以跳出循环，使运行指令达到复合语句的最后一步。</span><br><span class="line"></span><br><span class="line">#### ITERATE迭代</span><br><span class="line"></span><br><span class="line">通过引用复合语句的标号,来从新开始复合语句</span><br><span class="line"></span><br><span class="line">### ITERATE</span><br></pre></td></tr></table></figure><p>DELIMITER //<br>  CREATE PROCEDURE proc8()<br>  BEGIN<br>    DECLARE v INT;<br>    SET v=0;<br>    LOOP_LABLE:LOOP<br>      IF v=3 THEN<br>        SET v=v+1;<br>        ITERATE LOOP_LABLE;<br>      END IF;<br>      INSERT INTO t VALUES(v);<br>      SET v=v+1;<br>      IF v&gt;=5 THEN<br>        LEAVE LOOP_LABLE;<br>      END IF;<br>    END LOOP;<br>  END;<br>  //<br>DELIMITER ;<br>```</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;存储过程&lt;/strong&gt;是可编程的函数，在数据库中创建并保存，可以由SQL语句和控制结构组成。当想要在不同的应用程序或平台
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Database" scheme="http://mindasoft.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>Java配置中心</title>
    <link href="http://mindasoft.com/2017/08/08/Java/Java%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    <id>http://mindasoft.com/2017/08/08/Java/Java配置中心/</id>
    <published>2017-08-08T03:45:04.000Z</published>
    <updated>2017-12-05T02:41:49.301Z</updated>
    
    <content type="html"><![CDATA[<p>阿里：Diamond<br><a href="https://github.com/hengyunabc/xdiamond" target="_blank" rel="noopener">https://github.com/hengyunabc/xdiamond</a><br><a href="https://yq.aliyun.com/articles/6058" target="_blank" rel="noopener">https://yq.aliyun.com/articles/6058</a></p><p>携程：Apollo<br><a href="https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener">https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D</a><br><a href="https://github.com/ctripcorp/apollo/wiki/Quick-Start" target="_blank" rel="noopener">https://github.com/ctripcorp/apollo/wiki/Quick-Start</a></p><p>Spring: Spring Cload Config<br><a href="https://github.com/spring-cloud/spring-cloud-config" target="_blank" rel="noopener">https://github.com/spring-cloud/spring-cloud-config</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;阿里：Diamond&lt;br&gt;&lt;a href=&quot;https://github.com/hengyunabc/xdiamond&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/hengyunabc/xdiamond&lt;/a&gt;&lt;
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Java" scheme="http://mindasoft.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Velocity简单介绍</title>
    <link href="http://mindasoft.com/2017/05/30/Java/Velocity%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://mindasoft.com/2017/05/30/Java/Velocity简单介绍/</id>
    <published>2017-05-30T12:13:44.000Z</published>
    <updated>2017-12-05T02:41:49.302Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Java" scheme="http://mindasoft.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>FreeMarker简单介绍</title>
    <link href="http://mindasoft.com/2017/05/30/Java/FreeMarker%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://mindasoft.com/2017/05/30/Java/FreeMarker简单介绍/</id>
    <published>2017-05-30T12:13:44.000Z</published>
    <updated>2017-12-05T02:41:49.300Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Java" scheme="http://mindasoft.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Oracle查看表空间常用语句</title>
    <link href="http://mindasoft.com/2017/05/30/Database/Oracle%E6%9F%A5%E7%9C%8B%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/"/>
    <id>http://mindasoft.com/2017/05/30/Database/Oracle查看表空间常用语句/</id>
    <published>2017-05-30T12:02:59.000Z</published>
    <updated>2017-12-05T02:41:49.291Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看表空间使用率"><a href="#查看表空间使用率" class="headerlink" title="查看表空间使用率"></a>查看表空间使用率</h1><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">select <span class="keyword">a</span>.tablespace_name,</span><br><span class="line">       <span class="keyword">a</span>.<span class="keyword">bytes</span> / <span class="number">1024</span> / <span class="number">1024</span> <span class="string">"Sum MB"</span>,</span><br><span class="line">       (<span class="keyword">a</span>.<span class="keyword">bytes</span> - b.<span class="keyword">bytes</span>) / <span class="number">1024</span> / <span class="number">1024</span> <span class="string">"used MB"</span>,</span><br><span class="line">       b.<span class="keyword">bytes</span> / <span class="number">1024</span> / <span class="number">1024</span> <span class="string">"free MB"</span>,</span><br><span class="line">       <span class="built_in">round</span>(((<span class="keyword">a</span>.<span class="keyword">bytes</span> - b.<span class="keyword">bytes</span>) / <span class="keyword">a</span>.<span class="keyword">bytes</span>) * <span class="number">100</span>, <span class="number">2</span>) <span class="string">"percent_used"</span></span><br><span class="line">  <span class="built_in">from</span> (select tablespace_name, <span class="built_in">sum</span>(<span class="keyword">bytes</span>) <span class="keyword">bytes</span></span><br><span class="line">          <span class="built_in">from</span> dba_data_files</span><br><span class="line">         group <span class="keyword">by</span> tablespace_name) <span class="keyword">a</span>,</span><br><span class="line">       (select tablespace_name, <span class="built_in">sum</span>(<span class="keyword">bytes</span>) <span class="keyword">bytes</span>, <span class="built_in">max</span>(<span class="keyword">bytes</span>) largest</span><br><span class="line">          <span class="built_in">from</span> dba_free_space</span><br><span class="line">         group <span class="keyword">by</span> tablespace_name) b</span><br><span class="line"> where <span class="keyword">a</span>.tablespace_name = b.tablespace_name</span><br><span class="line"> order <span class="keyword">by</span> ((<span class="keyword">a</span>.<span class="keyword">bytes</span> - b.<span class="keyword">bytes</span>) / <span class="keyword">a</span>.<span class="keyword">bytes</span>) desc</span><br></pre></td></tr></table></figure><h1 id="查看用户、表空间使用率"><a href="#查看用户、表空间使用率" class="headerlink" title="查看用户、表空间使用率"></a>查看用户、表空间使用率</h1><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select <span class="keyword">a</span>.username,b.* <span class="built_in">from</span> dba_users <span class="keyword">a</span> left join (select <span class="keyword">a</span>.tablespace_name,</span><br><span class="line">       <span class="keyword">a</span>.<span class="keyword">bytes</span> / <span class="number">1024</span> / <span class="number">1024</span> <span class="string">"Sum MB"</span>,</span><br><span class="line">       (<span class="keyword">a</span>.<span class="keyword">bytes</span> - b.<span class="keyword">bytes</span>) / <span class="number">1024</span> / <span class="number">1024</span> <span class="string">"used MB"</span>,</span><br><span class="line">       b.<span class="keyword">bytes</span> / <span class="number">1024</span> / <span class="number">1024</span> <span class="string">"free MB"</span>,</span><br><span class="line">       <span class="built_in">round</span>(((<span class="keyword">a</span>.<span class="keyword">bytes</span> - b.<span class="keyword">bytes</span>) / <span class="keyword">a</span>.<span class="keyword">bytes</span>) * <span class="number">100</span>, <span class="number">2</span>) <span class="string">"percent_used"</span></span><br><span class="line">  <span class="built_in">from</span> (select tablespace_name, <span class="built_in">sum</span>(<span class="keyword">bytes</span>) <span class="keyword">bytes</span></span><br><span class="line">          <span class="built_in">from</span> dba_data_files</span><br><span class="line">         group <span class="keyword">by</span> tablespace_name) <span class="keyword">a</span>,</span><br><span class="line">       (select tablespace_name, <span class="built_in">sum</span>(<span class="keyword">bytes</span>) <span class="keyword">bytes</span>, <span class="built_in">max</span>(<span class="keyword">bytes</span>) largest</span><br><span class="line">          <span class="built_in">from</span> dba_free_space</span><br><span class="line">         group <span class="keyword">by</span> tablespace_name) b</span><br><span class="line"> where <span class="keyword">a</span>.tablespace_name = b.tablespace_name) b <span class="keyword">on</span> <span class="title">a</span>.<span class="title">default_tablespace</span> = <span class="title">b</span>.<span class="title">tablespace_name</span>;</span><br></pre></td></tr></table></figure><h1 id="删除用户和数据文件"><a href="#删除用户和数据文件" class="headerlink" title="删除用户和数据文件"></a>删除用户和数据文件</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--步骤一：  删除user</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> ×× <span class="keyword">cascade</span></span><br><span class="line"><span class="comment">--说明： 删除了user，只是删除了该user下的schema objects，是不会删除相应的tablespace的。</span></span><br><span class="line"><span class="comment">--步骤二： 删除tablespace</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLESPACE</span> tablespace_name <span class="keyword">INCLUDING</span> <span class="keyword">CONTENTS</span> <span class="keyword">AND</span> <span class="keyword">DATAFILES</span>;</span><br></pre></td></tr></table></figure><h1 id="改变数据文件大小"><a href="#改变数据文件大小" class="headerlink" title="改变数据文件大小"></a>改变数据文件大小</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">datafile</span> <span class="string">'/u01/oracle/oradata/aeye/sysaux01.dbf'</span> <span class="keyword">resize</span> <span class="number">2</span>G;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;查看表空间使用率&quot;&gt;&lt;a href=&quot;#查看表空间使用率&quot; class=&quot;headerlink&quot; title=&quot;查看表空间使用率&quot;&gt;&lt;/a&gt;查看表空间使用率&lt;/h1&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Database" scheme="http://mindasoft.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>Spring常用注解</title>
    <link href="http://mindasoft.com/2017/04/20/Spring%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/"/>
    <id>http://mindasoft.com/2017/04/20/Spring常用注解/</id>
    <published>2017-04-20T14:29:37.000Z</published>
    <updated>2018-04-16T07:37:29.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java原生注解"><a href="#Java原生注解" class="headerlink" title="Java原生注解"></a>Java原生注解</h1><p>@Retention：注解说明,这种类型的注解会被保留到那个阶段<br>1.RetentionPolicy.SOURCE —— 这种类型的Annotations只在源代码级别保留,编译时就会被忽略<br>2.RetentionPolicy.CLASS —— 这种类型的Annotations编译时被保留,在class文件中存在,但JVM将会忽略<br>3.RetentionPolicy.RUNTIME —— 这种类型的Annotations将被JVM保留,所以他们能在运行时被JVM或其他使用反射机制的代码所读取和使用.</p><p>@Documented：作用是在生成javadoc文档的时候将该注解也写入到文档中。javadoc默认是不会将注解写到文档中的。</p><p>@Target:注解的使用的目标<br>　@Target(ElementType.TYPE)   //接口、类、枚举、注解<br>　@Target(ElementType.FIELD) //字段、枚举的常量<br>　@Target(ElementType.METHOD) //方法<br>　@Target(ElementType.PARAMETER) //方法参数<br>　@Target(ElementType.CONSTRUCTOR)  //构造函数<br>　@Target(ElementType.LOCAL_VARIABLE)//局部变量<br>　@Target(ElementType.ANNOTATION_TYPE)//注解<br>　@Target(ElementType.PACKAGE) ///包 </p><p>@Inherited：它指明被注解的类的所有属性将会自动继承到它的子类中.</p><p>#java EE规范<br>@Resource：为目标bean指定协作者Bean<br>@Inject：为目标bean指定协作者Bean<br>@Named：为目标bean指定协作者Bean<br>@Qualifier：<br>@PostConstruct：在构造函数执行完成之后执行。<br>@PreDestory：bean销毁之前的执行方法。</p><h1 id="Spring注解"><a href="#Spring注解" class="headerlink" title="Spring注解"></a>Spring注解</h1><p>@Component   :标注一个普通的spring Bean类<br>@Service :标注一个业务逻辑组件类。<br>@Repository :标注一个DAO组件类。<br>@Controller:标注一个控制器组件类。</p><p>@EnableWebMvc：开启MVC</p><p><strong>方法级别</strong><br>@ResetController：组合注解，组合了@Controller和@RequestBody<br>@RequestMapping：配置URI和方法之间的映射<br>  @GetMapping<br>  @PostMapping<br>  @PutMapping<br>@RequestHeader 注解，可以把Request请求header部分的值绑定到方法的参数上。如：@RequestHeader(“Accept-Encoding”) String encoding<br>@CookieValue 可以把Request header中关于cookie的值绑定到方法的参数上。如：@CookieValue(“JSESSIONID”) String cookie</p><p>@CrossOrigin:实现跨域访问。</p><p><strong>参数</strong><br>@PathVariable：接受路径参数，如someUrl/{paramId}, 这时的paramId可通过 @Pathvariable注解绑定它传过来的值到方法的参数上。<br>@RequestParam：<br>A） 常用来处理简单类型的绑定，通过Request.getParameter() 获取的String可直接转换为简单类型的情况（ String–&gt; 简单类型的转换操作由ConversionService配置的转换器来完成）；因为使用request.getParameter()方式获取参数，所以可以处理get 方式中queryString的值，也可以处理post方式中 body data的值；<br>B）用来处理Content-Type: 为 application/x-www-form-urlencoded编码的内容，提交方式GET、POST；<br>C) 该注解有两个属性： value、required； value用来指定要传入值的id名称，required用来指示参数是否必须绑定；<br>@RequestBody：<br>该注解常用来处理Content-Type: 不是application/x-www-form-urlencoded编码的内容，例如application/json, application/xml等；<br>它是通过使用HandlerAdapter 配置的HttpMessageConverters来解析post data body，然后绑定到相应的bean上的。<br>因为配置有FormHttpMessageConverter，所以也可以用来处理 application/x-www-form-urlencoded的内容，处理完的结果放在一个MultiValueMap<string, string="">里，这种情况在某些特殊需求下使用</string,></p><p>@InitBinder：用来设置WebDataBinder，WebDataBinder用来自动绑定前台请求的参数到Model中。<br>@ExceptionHandler：用于全局处理控制器里的异常。<br>@ModelAttribute<br>该注解有两个用法，一个是用于方法上，一个是用于参数上；<br>用于方法上时：  通常用来在处理@RequestMapping之前，为请求绑定需要从后台查询的model；<br>用于参数上时： 用来通过名称对应，把相应名称的值绑定到注解的参数bean上；要绑定的值来源于：</p><p>@SessionAttribute:该注解用来绑定HttpSession中的attribute对象的值，便于在方法中的参数里使用。<br>@RequestAttribute：可以被用于访问由过滤器或拦截器创建的、预先存在的请求属性</p><p>@ResponseBody：支持将返回值放在response的body体内</p><p>@Scope：注解也可以指定Bean实例的作用域。取值：Singleton(默认)|Prototype|Request|Session|GlobalSession<br>@Autowired：为目标bean指定协作者Bean<br>@Value：为属性注入值</p><p>@Aspect：声明一个切面<br>@PointCut：定义拦截规则<br>@After：标注一个之后建言<br>@Before：标注一个之前建言<br>@Around：标注一个运行时建言</p><p>@Transcational：事物<br>@Cacheable：数据缓存</p><p>@EnableScheduling：开启计划任务<br>@Scheduled：声明这是一个计划任务</p><p>@Import：since4.2。导入普通的java类,并将其声明成一个bean<br>@Configuration：声明一个配置类<br>@ComponentScan：制定Spring扫描包路径。<br>@Bean 注解在方法上，声明当前方法的返回<br>@Profile：可以注解在类或方法上。 在不同环境下使用不同配置提供支持。<br>@Conditional：根据满足某一个特定条件创建一个特定的Bean。</p><h1 id="Spring-boot"><a href="#Spring-boot" class="headerlink" title="Spring boot"></a>Spring boot</h1><p>@SpringBootApplication ：会根据类路径中jar包自动进行相关配置。<br>@EnableAutoConfiguration<br>@ConfigurationProperties：加载一个properties文件。</p><p>@ConditionalOnBean:当容器里有指定的Bean的条件下<br>@ConditionalOnClass:当类路径下有指定的类的条件下。<br>@ConditionalOnExpression：基于SPEl表达式作为判断条件。<br>@ConditionalOnJava：基于JVM版本作为判断条件。<br>@ConditionalOnJndi:在JNDI存在的条件下查找指定的位置。<br>@ConditionalOnMissingBean：当容器里没有指定Bean的条件下。<br>@ConditionalOnMissingClass:当类路径下没有指定的类的条件下。<br>@ConditionalOnWebApplication:当前项目是web项目的条件下。<br>@ConditionalOnNotWebApplication:当前项目部是WEb项目的条件下。<br>@ConditionalOnProperty:指定的属性是否有指定的值。<br>@ConditionalOnResource：类路径是否有指定的值。<br>@ConditionalOnSingleCandidate:当指定首选的Bean。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java原生注解&quot;&gt;&lt;a href=&quot;#Java原生注解&quot; class=&quot;headerlink&quot; title=&quot;Java原生注解&quot;&gt;&lt;/a&gt;Java原生注解&lt;/h1&gt;&lt;p&gt;@Retention：注解说明,这种类型的注解会被保留到那个阶段&lt;br&gt;1.Retentio
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Spring" scheme="http://mindasoft.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装成服务及自启动</title>
    <link href="http://mindasoft.com/2017/04/20/tomcat%E5%AE%89%E8%A3%85%E6%88%90%E6%9C%8D%E5%8A%A1%E5%8F%8A%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    <id>http://mindasoft.com/2017/04/20/tomcat安装成服务及自启动/</id>
    <published>2017-04-20T14:20:26.000Z</published>
    <updated>2017-12-05T02:41:49.305Z</updated>
    
    <content type="html"><![CDATA[<h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><p>1、解压该压缩包，生成3分tomcat 分别命名为 tomcat1,tomcat2,tomcat3</p><p>2、进入tomcat1/conf/目录，修改server.xml的端口。</p><p>3、进入tomcat1/bin目录，修改 service.bat</p><p>4、修改SERVICE_NAME，如下<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rem <span class="builtin-name">Set</span><span class="built_in"> default Service </span>name</span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">SERVICE_NAME</span>=Tomcat7</span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">DISPLAYNAME</span>=Apache Tomcat 7.0 %SERVICE_NAME%</span><br></pre></td></tr></table></figure></p><p>5、打开CMD命令控制台，进入tomcat1/bin目录，执行服务安装命令<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service<span class="selector-class">.bat</span> install</span><br></pre></td></tr></table></figure></p><p>注意：不要在环境变量设置CATALINA_HOME和CATALINA_HOME，否则无法生效！</p><p>同理安装其他Tomcat。</p><p>PS：删除服务<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service<span class="selector-class">.bat</span> uninstall</span><br></pre></td></tr></table></figure></p><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><p>简单自启动：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.<span class="keyword">local</span></span><br></pre></td></tr></table></figure></p><p>在  exit 0  之前添加启动命令：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/home/</span>tomcat<span class="regexp">/bin/</span>startup.sh</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;windows&quot;&gt;&lt;a href=&quot;#windows&quot; class=&quot;headerlink&quot; title=&quot;windows&quot;&gt;&lt;/a&gt;windows&lt;/h1&gt;&lt;p&gt;1、解压该压缩包，生成3分tomcat 分别命名为 tomcat1,tomcat2,tomcat3&lt;
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Server" scheme="http://mindasoft.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>spring声明式事务配置</title>
    <link href="http://mindasoft.com/2017/03/19/spring%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    <id>http://mindasoft.com/2017/03/19/spring声明式事务配置/</id>
    <published>2017-03-19T15:40:59.000Z</published>
    <updated>2017-12-05T02:41:49.304Z</updated>
    
    <content type="html"><![CDATA[<p>上周要一个同事开发一个模块，他说事物死活不起作用。我看了一下，大致主要配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置事务管理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"businessDataSource"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事务相关控制配置：例如配置事务的传播机制 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"fortressAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"count*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span>  <span class="attr">read-only</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>  <span class="attr">read-only</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"remove*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"modify*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事务控制切入点在service层</span></span><br><span class="line"><span class="comment">|第一个 *  —— 通配 任意返回值类型|</span></span><br><span class="line"><span class="comment">|第二个 *  —— 通配包com.mindasoft.fortress.service下的任意class|</span></span><br><span class="line"><span class="comment">|第三个 *  —— 通配包com.mindasoft.fortress.service下的任意class的任意方法|</span></span><br><span class="line"><span class="comment">|第四个 .. —— 通配 办法可以有0个或多个参数</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"allFortressMethod"</span>  <span class="attr">expression</span>=<span class="string">"execution(* com.mindasoft.fortress.service.*.*(..))"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"fortressAdvice"</span>  <span class="attr">pointcut-ref</span>=<span class="string">"allFortressMethod"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置是这样没错，他的配置也问题，但是为什么会不起作用呢？<br>Debug进行，发现根本就没有进入事物处理。为什么会这样？<br>看配置web.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Spring MVC 子Context配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:/config/servlet.web.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Spring root Context监听配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:/config/**/*.bean.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Spring和SpringMVC一起使用时，ContextLoaderListener会初始化一个Context，这个Context是RootContext，而DispatcherServlet也会初始化一个Context，简称WebContext。WebContext是RootContext的子集。当mvc有自己的bean时便不再去向父context要bean。</p><p>所以，在servlet.web.xml 和*.bean.xml 当中，各自的component-scan配置要指定相应位置，否则会导致bean混乱，从导致声明事务无效。<br>如下：<br>servlet.web.xml<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">context</span>:<span class="keyword">component</span>-scan base-<span class="keyword">package</span>=<span class="string">"com.mindasoft.*.controllers"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>*.bean.xml<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">context</span>:<span class="keyword">component</span>-scan base-<span class="keyword">package</span>=<span class="string">"com.mindasoft.*.dao"</span>  /&gt;</span><br><span class="line">&lt;<span class="keyword">context</span>:<span class="keyword">component</span>-scan base-<span class="keyword">package</span>=<span class="string">"com.mindasoft.*.service"</span>  /&gt;</span><br></pre></td></tr></table></figure></p><p>当然你也可以使用DispatcherServlet加载全部的配置文件或者将AOP配置复制到servlet.web.xml中。</p><p>这个修改了之后还是不行？？<br>看了下他的代码，他是自己写了一个Exception。然后断点跟踪源代码TransactionAspectSupport：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handle a throwable, completing the transaction.</span></span><br><span class="line"><span class="comment"> * We may commit or roll back, depending on the configuration.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> txInfo information about the current transaction</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ex throwable encountered</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">completeTransactionAfterThrowing</span><span class="params">(TransactionInfo txInfo, Throwable ex)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (txInfo != <span class="keyword">null</span> &amp;&amp; txInfo.hasTransaction()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class="line">            logger.trace(<span class="string">"Completing transaction for ["</span> + txInfo.getJoinpointIdentification() +</span><br><span class="line">                    <span class="string">"] after exception: "</span> + ex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (txInfo.transactionAttribute.rollbackOn(ex)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                txInfo.getTransactionManager().rollback(txInfo.getTransactionStatus());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (TransactionSystemException ex2) &#123;</span><br><span class="line">                logger.<span class="keyword">error</span>(<span class="string">"Application exception overridden by rollback exception"</span>, ex);</span><br><span class="line">                ex2.initApplicationException(ex);</span><br><span class="line">                <span class="keyword">throw</span> ex2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (RuntimeException ex2) &#123;</span><br><span class="line">                logger.<span class="keyword">error</span>(<span class="string">"Application exception overridden by rollback exception"</span>, ex);</span><br><span class="line">                <span class="keyword">throw</span> ex2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Error err) &#123;</span><br><span class="line">                logger.<span class="keyword">error</span>(<span class="string">"Application exception overridden by rollback error"</span>, ex);</span><br><span class="line">                <span class="keyword">throw</span> err;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// We don't roll back on this exception.</span></span><br><span class="line">            <span class="comment">// Will still roll back if TransactionStatus.isRollbackOnly() is true.</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                txInfo.getTransactionManager().commit(txInfo.getTransactionStatus());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (TransactionSystemException ex2) &#123;</span><br><span class="line">                logger.<span class="keyword">error</span>(<span class="string">"Application exception overridden by commit exception"</span>, ex);</span><br><span class="line">                ex2.initApplicationException(ex);</span><br><span class="line">                <span class="keyword">throw</span> ex2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (RuntimeException ex2) &#123;</span><br><span class="line">                logger.<span class="keyword">error</span>(<span class="string">"Application exception overridden by commit exception"</span>, ex);</span><br><span class="line">                <span class="keyword">throw</span> ex2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Error err) &#123;</span><br><span class="line">                logger.<span class="keyword">error</span>(<span class="string">"Application exception overridden by commit error"</span>, ex);</span><br><span class="line">                <span class="keyword">throw</span> err;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面的方法中有这么一段txInfo.transactionAttribute.rollbackOn(ex)，这里是判断是否需要执行回滚操作的，跟踪rollbackOn方法最后会执行到DefaultTransactionAttribute中的rollbackOn方法。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * The default behavior <span class="keyword">is</span> <span class="keyword">as</span> <span class="keyword">with</span> EJB: rollback <span class="keyword">on</span> unchecked exception.</span><br><span class="line"> * Additionally attempt <span class="keyword">to</span> rollback <span class="keyword">on</span> Error.</span><br><span class="line"> * &lt;p&gt;This <span class="keyword">is</span> consistent <span class="keyword">with</span> TransactionTemplate's default behavior.</span><br><span class="line"> */</span><br><span class="line">public <span class="built_in">boolean</span> rollbackOn(Throwable ex) &#123;</span><br><span class="line"><span class="built_in">    return</span> (ex instanceof RuntimeException || ex instanceof Error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>到这里，应该都清楚了。。。自己主动抛异常Exception是不对的。这里只捕获运行时异常RuntimeException 及Error，所以我们测试时不可以直接抛Exception，而应该换成RuntimeException 。当然。也可在xml中指定rollback-for。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事务相关控制配置：例如配置事务的传播机制 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"fortressAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"count*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span>  <span class="attr">read-only</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>  <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"remove*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"modify*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上周要一个同事开发一个模块，他说事物死活不起作用。我看了一下，大致主要配置如下：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Spring" scheme="http://mindasoft.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>memcached在Linux下的安装</title>
    <link href="http://mindasoft.com/2017/03/18/Database/memcached%E5%9C%A8Linux%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://mindasoft.com/2017/03/18/Database/memcached在Linux下的安装/</id>
    <published>2017-03-18T07:54:55.000Z</published>
    <updated>2017-12-05T02:41:49.294Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装环境：系统是 centos6.5</strong></p><h1 id="libevent安装"><a href="#libevent安装" class="headerlink" title="libevent安装"></a>libevent安装</h1><p>打开memcached官网的下载界面<a href="http://memcached.org/downloads，看到有如下提示：" target="_blank" rel="noopener">http://memcached.org/downloads，看到有如下提示：</a></p><p>Debian/Ubuntu: apt-get install libevent-dev Redhat/Centos: yum install libevent-devel</p><p>说明memcached依赖于libevent 。</p><h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> libevent-devel</span><br></pre></td></tr></table></figure><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>下载网址：<a href="http://libevent.org/" target="_blank" rel="noopener">http://libevent.org/</a><br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#解压 </span></span><br><span class="line">tar -zxvf libevent<span class="number">-2.0</span><span class="number">.22</span>-stable.tar.gz </span><br><span class="line"><span class="meta">#配置 </span></span><br><span class="line">./configure –prefix=/usr/<span class="keyword">local</span>/libevent </span><br><span class="line"><span class="meta">#安装 </span></span><br><span class="line"><span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure></p><h1 id="下载memcached"><a href="#下载memcached" class="headerlink" title="下载memcached"></a>下载memcached</h1><p>memcached下载网址： <a href="http://memcached.org/downloads" target="_blank" rel="noopener">http://memcached.org/downloads</a></p><p>或者</p><p>wget <a href="http://memcached.org/latest" target="_blank" rel="noopener">http://memcached.org/latest</a></p><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><p>该版本的memcached没有使用gzip压缩，所以不能加-g<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-xvf</span> <span class="selector-tag">memcached-1</span><span class="selector-class">.4</span><span class="selector-class">.25</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure></p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>通过 ./configure –help可以参考编译参数，可以看出，我们可以通过 –with-libevent来指定libevent安装目录。 编译命令如下：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="regexp">/configure --prefix=/u</span>sr<span class="regexp">/local/m</span>emcached  --with-libevent=<span class="regexp">/usr/</span>local<span class="regexp">/libevent/</span></span><br></pre></td></tr></table></figure></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>执行如下命令<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure></p><p>安装完成后，可以看到/usr/local目录下多了一个memcached目录。</p><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./memcached</span> -vv -u nobody</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;安装环境：系统是 centos6.5&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;libevent安装&quot;&gt;&lt;a href=&quot;#libevent安装&quot; class=&quot;headerlink&quot; title=&quot;libevent安装&quot;&gt;&lt;/a&gt;libevent安装&lt;/h
      
    
    </summary>
    
      <category term="programming" scheme="http://mindasoft.com/categories/programming/"/>
    
    
      <category term="Database" scheme="http://mindasoft.com/tags/database/"/>
    
  </entry>
  
</feed>
